{"ast":null,"code":"var _jsxFileName = \"/media/htet/13d0eda8-9d9f-4341-9c22-cd0d2676df10/PADC Project/PADC7-FP-BloodSharing-Web/blood-sharing/src/components/container/BloodRequest/BloodRequest.js\";\nimport React from \"react\";\nimport { BrowserRouter as Router, Route, Link, Redirect } from \"react-router-dom\";\nimport { Container, Row, Col, Navbar, Nav, NavDropdown, NavItem, Form, Carousel, Image, Card, Button, p, TabPane, TabContent } from 'react-bootstrap';\nimport bld_logo from '../../../assets/images/icons/bld_logo.png';\nimport firebase from '../../../utilites/firebase';\nimport { connect } from 'react-redux';\nimport { fetchUsers } from '../../../actions/userActions';\nimport { fetchDonors } from '../../../actions/donorActions';\n\nclass BloodRequest extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleOnClick = event => {\n      event.preventDefault();\n      const request_id = event.target.value;\n      const user_id = this.props.currentUser;\n      const users = this.props.users;\n      const user = users.find(item => item.id == user_id);\n      const userData = {\n        bloodType: user.bloodType,\n        phone: user.phone,\n        uid: user.uid,\n        name: user.name // Insert donor to request_user\n\n      };\n      firebase.firestore().collection('Request_User').doc(request_id).collection('Donor').doc(user_id).set(userData).then(data => {\n        console.log(\"success\");\n      }).catch(error => {\n        console.log(error);\n      });\n      const donorList = this.props.donors;\n      const donor = donorList.find(item => item.uid == user_id);\n      const donor_id = donor.id;\n      const requestUser = this.props.bloodRequest;\n      const requestData = {\n        bloodType: requestUser.bloodType,\n        phone: requestUser.phone,\n        uid: requestUser.uid,\n        name: requestUser.username // Insert request to donor\n\n      };\n      firebase.firestore().collection('Donor').doc(donor_id).collection('Request_User').doc(requestUser.uid).set(requestData).then(data => {\n        console.log(\"success\");\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.props.fetchUsers();\n    this.props.fetchDonors();\n  }\n\n  render() {\n    const uid = this.props.currentUser;\n    const user_id = this.props.currentUser.uid;\n    const users = this.props.users;\n    const user = users.find(item => item.id == user_id);\n    const donorList = this.props.donors;\n    const donor = donorList.find(item => item.uid == uid);\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 6,\n      md: 4,\n      lg: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"cardbody fixpage mt-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"box card-color\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-body p-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"d-flex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-title text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, this.props.bloodRequest.bloodType), React.createElement(\"div\", {\n      className: \"middle-line\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"card-img text-center pt-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"https://img.icons8.com/metro/52/000000/ambulance.png\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"d-flex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"botton-line\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"botton-line\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"card-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"cardname text-center mt-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, this.props.bloodRequest.username)), React.createElement(Row, {\n      className: \"cardinfo pl-3 pr-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 4,\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Blood bag\"))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"4\"))), React.createElement(Col, {\n      md: 5,\n      className: \"text-center pr-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"location\"))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, this.props.bloodRequest.loaction))), React.createElement(Col, {\n      md: 3,\n      className: \"pr-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Case\"))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, this.props.bloodRequest.reason)))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(Col, {\n      className: \"text-right pr-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"29/06/2019 3:30 pm\"))))), donor !== undefined && user.bloodType === this.props.bloodRequest.bloodType && React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(Col, {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: \"btn_donate\",\n      onClick: this.handleOnClick,\n      value: this.props.bloodRequest.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Donate\"))))))));\n  }\n\n}\n\n{\n  /* </Row>   */\n}\n{\n  /* end of cardbody fixpage */\n}\n{\n  /* </Container>\n  </div> */\n}\n\nconst mapStateToProps = state => ({\n  currentUser: state.currentUser,\n  users: state.users,\n  donors: state.donors\n});\n\nconst mapDispatchToProps = {\n  fetchUsers,\n  fetchDonors\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(BloodRequest);","map":{"version":3,"sources":["/media/htet/13d0eda8-9d9f-4341-9c22-cd0d2676df10/PADC Project/PADC7-FP-BloodSharing-Web/blood-sharing/src/components/container/BloodRequest/BloodRequest.js"],"names":["React","BrowserRouter","Router","Route","Link","Redirect","Container","Row","Col","Navbar","Nav","NavDropdown","NavItem","Form","Carousel","Image","Card","Button","p","TabPane","TabContent","bld_logo","firebase","connect","fetchUsers","fetchDonors","BloodRequest","Component","constructor","props","handleOnClick","event","preventDefault","request_id","target","value","user_id","currentUser","users","user","find","item","id","userData","bloodType","phone","uid","name","firestore","collection","doc","set","then","data","console","log","catch","error","donorList","donors","donor","donor_id","requestUser","bloodRequest","requestData","username","render","loaction","reason","undefined","mapStateToProps","state","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { BrowserRouter as Router,Route,Link,Redirect} from \"react-router-dom\";\nimport { Container, Row, Col, Navbar, Nav, NavDropdown, NavItem, Form, Carousel, Image, Card, Button, p, TabPane, TabContent } from 'react-bootstrap';\nimport bld_logo from '../../../assets/images/icons/bld_logo.png';\nimport firebase from '../../../utilites/firebase';\nimport { connect } from 'react-redux';\nimport { fetchUsers } from '../../../actions/userActions';\nimport { fetchDonors } from '../../../actions/donorActions';\n\nclass BloodRequest extends React.Component {\n\n    constructor(props) {\n        super(props); \n        this.props.fetchUsers();\n        this.props.fetchDonors();\n    }\n\n    handleOnClick = (event) => {\n        event.preventDefault();\n        const request_id = event.target.value;\n        const user_id = this.props.currentUser;\n        const users = this.props.users;\n        const user = users.find( item => item.id == user_id);\n        const userData = {\n            bloodType: user.bloodType,\n            phone: user.phone,\n            uid: user.uid,\n            name: user.name\n        }   \n        // Insert donor to request_user\n        firebase.firestore().collection('Request_User').doc(request_id).collection('Donor').doc(user_id).set(userData)\n        .then( data => {\n            console.log(\"success\")\n        })\n        .catch( error => {\n            console.log(error)\n        })  \n\n        const donorList = this.props.donors;\n        const donor = donorList.find( item => item.uid == user_id);\n        const donor_id = donor.id;\n        const requestUser = this.props.bloodRequest;\n        const requestData = {\n            bloodType: requestUser.bloodType,\n            phone: requestUser.phone,\n            uid: requestUser.uid,\n            name: requestUser.username\n        }\n        // Insert request to donor\n        firebase.firestore().collection('Donor').doc(donor_id).collection('Request_User').doc(requestUser.uid).set(requestData)\n        .then( data => {\n            console.log(\"success\")\n        })\n        .catch( error => {\n            console.log(error)\n        })\n\n    }\n\n  render() {\n    const uid = this.props.currentUser;\n    const user_id = this.props.currentUser.uid;\n    const users = this.props.users;\n    const user = users.find( item => item.id == user_id);\n    const donorList = this.props.donors;\n    const donor = donorList.find( item => item.uid == uid);\n    \n    return (\n      <React.Fragment>\n        <Col sm={6} md={4} lg= {3}>\n            <div className=\"cardbody fixpage mt-3\">\n                  \n          \n                      <div className='box card-color'>\n                          <div className=\"card-body p-0\">\n                              <div className=\"d-flex\">\n                                  <div className=\"card-title text-center\">{this.props.bloodRequest.bloodType}</div>\n                                  <div className=\"middle-line\"></div>\n                                  <div className=\"card-img text-center pt-1\"><img src=\"https://img.icons8.com/metro/52/000000/ambulance.png\"/></div>\n                              </div>\n                              \n                              <div className=\"d-flex\">\n                                  <div className=\"botton-line\"></div>\n                                  <div className=\"botton-line\"></div>\n                              </div>\n                              \n                              <div className=\"card-content\">\n                                  <div className=\"cardname text-center mt-1\"><label>{this.props.bloodRequest.username}</label></div>\n                                  <Row className=\"cardinfo pl-3 pr-3\">\n                                      <Col md={4} className=\"\">\n                                          <div>\n                                              <label><i>Blood bag</i></label>\n                                          </div>\n                                          <div><label>4</label></div>\n                                      </Col>\n                                      <Col md={5} className=\"text-center pr-4\">\n                                          <div>\n                                              <label><i>location</i></label>\n                                          </div>\n                                          <div><label>{this.props.bloodRequest.loaction}</label></div>\n                                      </Col>\n                                      <Col md={3} className=\"pr-2\">\n                                          <div>\n                                              <label><i>Case</i></label>\n                                          </div>\n                                          <div><label>{this.props.bloodRequest.reason}</label></div>\n                                      </Col>\n                                  </Row>\n                                  <Row>\n                                      <Col  className=\"text-right pr-4\">\n                                          <label><span>29/06/2019 3:30 pm</span></label>\n                                      </Col>\n                                  </Row>\n                              </div>\n                              {donor !== undefined && user.bloodType === this.props.bloodRequest.bloodType && (   \n                              <Row>\n                                  <Col className=\"text-center\"><Button className=\"btn_donate\" onClick={this.handleOnClick} value={this.props.bloodRequest.id}>Donate</Button></Col>\n                              </Row>\n                              )}                                        \n                          </div>\n                      </div>\n                \n            </div>\n            </Col>\n      </React.Fragment>\n    );\n  }\n}\n {/* </Row>   */}\n        {/* end of cardbody fixpage */}\n        {/* </Container>\n        </div> */}\n\n\n\nconst mapStateToProps = state => ({\n    currentUser : state.currentUser,\n    users : state.users,\n    donors : state.donors,\n  });\nconst mapDispatchToProps = {\n    fetchUsers,\n    fetchDonors,\n  }\n  export default connect(mapStateToProps, mapDispatchToProps)(BloodRequest);"]},"metadata":{},"sourceType":"module"}