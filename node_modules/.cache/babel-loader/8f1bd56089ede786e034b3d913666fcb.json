{"ast":null,"code":"var _jsxFileName = \"/media/htet/13d0eda8-9d9f-4341-9c22-cd0d2676df10/PADC Project/PADC7-FP-BloodSharing-Web/blood-sharing/src/components/LoginForm/LoginForm.js\";\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Link, Redirect } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport { loginUserEvent, fetchUsers } from '../../actions/userActions';\n\nclass LoginForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleOnSubmit = event => {\n      event.preventDefault();\n      const username = this.username.current.value;\n      const password = this.password.current.value;\n      const currentUser = this.props.users.find(user => user.username === username && user.password === password);\n      console.log(this.props.users);\n\n      if (currentUser) {\n        this.props.loginUserEvent(currentUser, () => {\n          this.setState({\n            redirectToReferrer: true\n          });\n        });\n      } else {\n        alert(\"Wrong password\");\n      }\n    };\n\n    this.username = React.createRef();\n    this.password = React.createRef();\n    this.props.fetchUsers();\n    this.state = {\n      redirectToReferrer: false\n    };\n  }\n\n  render() {\n    let _ref = this.props.location.state || {\n      from: {\n        pathname: \"/\"\n      }\n    },\n        from = _ref.from;\n\n    let redirectToReferrer = this.state.redirectToReferrer;\n    if (redirectToReferrer) return React.createElement(Redirect, {\n      to: from,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    });\n    return React.createElement(\"form\", {\n      onSubmit: this.handleOnSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Username : \"), React.createElement(\"input\", {\n      id: \"username\",\n      required: true,\n      ref: this.username,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"input\", {\n      type: \"password\",\n      required: true,\n      id: \"password\",\n      ref: this.password,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Login\"));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  users: state.users\n});\n\nconst mapDispatchToProps = {\n  loginUserEvent,\n  fetchUsers\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);","map":{"version":3,"sources":["/media/htet/13d0eda8-9d9f-4341-9c22-cd0d2676df10/PADC Project/PADC7-FP-BloodSharing-Web/blood-sharing/src/components/LoginForm/LoginForm.js"],"names":["React","BrowserRouter","Router","Route","Link","Redirect","connect","loginUserEvent","fetchUsers","LoginForm","Component","constructor","props","handleOnSubmit","event","preventDefault","username","current","value","password","currentUser","users","find","user","console","log","setState","redirectToReferrer","alert","createRef","state","render","location","from","pathname","mapStateToProps","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { BrowserRouter as Router, Route, Link, Redirect } from \"react-router-dom\";\n\nimport { connect } from 'react-redux';\nimport { loginUserEvent,fetchUsers } from '../../actions/userActions';\n\nclass LoginForm extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.username = React.createRef();\n\t\tthis.password = React.createRef();\n\t\tthis.props.fetchUsers();\n\n\t\tthis.state = {\n\t\t\tredirectToReferrer : false\n\t\t};\n\t}\n\n\n\thandleOnSubmit = (event) => {\n\t\tevent.preventDefault();\n\n\t\tconst username = this.username.current.value;\n    \tconst password = this.password.current.value;\n\t\tconst currentUser = this.props.users.find( user => user.username === username && user.password === password );\n\t\tconsole.log(this.props.users);\n\t\t\n\t\tif(currentUser){\n\t\t\tthis.props.loginUserEvent(\n\t\t\t  \tcurrentUser,\n\t\t\t  \t() => {\n\t\t\t\t\tthis.setState({ redirectToReferrer: true });\n\t\t\t  \t}\n\t\t\t);\n\t\t}\n\t\telse{\n\t\t\talert(\"Wrong password\");\n\t\t}\n\t}\n\n\trender() {\n\t\tlet { from } = this.props.location.state || { from: { pathname:\"/\"} };\n\t\tlet { redirectToReferrer } = this.state;\n\n\t\tif(redirectToReferrer) return <Redirect to={from} />\n\n\t\treturn (\n\t\t\t<form onSubmit={this.handleOnSubmit}>\n\t\t\t  <label htmlFor=\"username\">Username : </label>\n\t\t\t  <input id=\"username\" required ref={this.username} />\n\t\t\t  <br />\n\t\t\t  <label htmlFor=\"password\">Password</label>\n\t\t\t  <input type=\"password\" required id=\"password\" ref={this.password} />\n\t\t\t  <br />\n\t\t\t  <button type=\"submit\">Login</button>\n\t\t\t</form>\n\t\t  );\n\t}\n}\n\nconst mapStateToProps = (state) => ({\n\tusers : state.users  \n});\n  \nconst mapDispatchToProps = {\n\tloginUserEvent,\n\tfetchUsers\n}\n  \nexport default connect(mapStateToProps,mapDispatchToProps)(LoginForm)"]},"metadata":{},"sourceType":"module"}