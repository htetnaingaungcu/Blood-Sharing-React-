{"ast":null,"code":"var _jsxFileName = \"/media/htet/13d0eda8-9d9f-4341-9c22-cd0d2676df10/PADC Project/PADC7-FP-BloodSharing-Web/blood-sharing/src/components/container/NewMessageForm/NewMessageForm.js\";\nimport React from 'react';\nimport firebase from '../../../utilities/firebase';\nimport './NewMessageForm.css';\nimport ImageUpload from '../ImageUpload';\nimport { connect } from 'react-redux';\nconst firestore = firebase.firestore();\n\nclass NewMessageForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleOnChange = event => {\n      this.setState({\n        new_message: event.target.value\n      });\n      firestore.collection('setting').doc('typing').update({\n        status: true\n      });\n    };\n\n    this.handleOnSubmit = event => {\n      event.preventDefault();\n      const message_id = this.props.messageId;\n      this.setState({\n        new_message: \"\"\n      });\n      const message = {\n        message: this.state.new_message,\n        sendAt: new Date(),\n        //uid: this.state.user.uid,\n        uid: \"N8hA26hdPJNS3bi81E2yk3oITiD3s\"\n      };\n\n      if (this.state.new_message !== \"\") {\n        firestore.collection('Chat_Room').doc(message_id).collection('Message').add(message); // .then(()=>{\n        //     console.log(message)\n        // })\n        // .catch(error => {\n        //     console.log(error)\n        // })\n      }\n    };\n\n    this.handleStartTyping = () => {\n      firestore.collection('setting').doc('typing').update({\n        status: true\n      });\n    };\n\n    this.handleStopTyping = () => {\n      firestore.collection('setting').doc('typing').update({\n        status: false\n      });\n    };\n\n    this.state = {\n      new_message: ''\n    };\n    this.imageFile = React.createRef();\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      className: \"newMessageForm\",\n      onSubmit: this.handleOnSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      placeholder: \"your message here\",\n      onBlur: this.handleStopTyping,\n      onChange: this.handleOnChange,\n      value: this.state.new_message,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Sent\"));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  user: state.currentUser\n});\n\nexport default connect(mapStateToProps)(NewMessageForm);","map":{"version":3,"sources":["/media/htet/13d0eda8-9d9f-4341-9c22-cd0d2676df10/PADC Project/PADC7-FP-BloodSharing-Web/blood-sharing/src/components/container/NewMessageForm/NewMessageForm.js"],"names":["React","firebase","ImageUpload","connect","firestore","NewMessageForm","Component","constructor","props","handleOnChange","event","setState","new_message","target","value","collection","doc","update","status","handleOnSubmit","preventDefault","message_id","messageId","message","state","sendAt","Date","uid","add","handleStartTyping","handleStopTyping","imageFile","createRef","render","mapStateToProps","user","currentUser"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAO,sBAAP;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,MAAMC,SAAS,GAAGH,QAAQ,CAACG,SAAT,EAAlB;;AAEA,MAAMC,cAAN,SAA6BL,KAAK,CAACM,SAAnC,CAA6C;AACzCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAQnBC,cARmB,GAQFC,KAAK,IAAI;AACxB,WAAKC,QAAL,CAAc;AACZC,QAAAA,WAAW,EAAEF,KAAK,CAACG,MAAN,CAAaC;AADd,OAAd;AAGAV,MAAAA,SAAS,CAACW,UAAV,CAAqB,SAArB,EACGC,GADH,CACO,QADP,EAEGC,MAFH,CAEU;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAFV;AAGD,KAfkB;;AAAA,SAiBnBC,cAjBmB,GAiBFT,KAAK,IAAI;AACxBA,MAAAA,KAAK,CAACU,cAAN;AACA,YAAMC,UAAU,GAAG,KAAKb,KAAL,CAAWc,SAA9B;AAEA,WAAKX,QAAL,CAAc;AAAEC,QAAAA,WAAW,EAAE;AAAf,OAAd;AACA,YAAMW,OAAO,GAAG;AACZA,QAAAA,OAAO,EAAE,KAAKC,KAAL,CAAWZ,WADR;AAEZa,QAAAA,MAAM,EAAE,IAAIC,IAAJ,EAFI;AAGZ;AACAC,QAAAA,GAAG,EAAE;AAJO,OAAhB;;AAOA,UAAI,KAAKH,KAAL,CAAWZ,WAAX,KAA2B,EAA/B,EAAmC;AACjCR,QAAAA,SAAS,CAACW,UAAV,CAAqB,WAArB,EAAkCC,GAAlC,CAAsCK,UAAtC,EAAkDN,UAAlD,CAA6D,SAA7D,EAAwEa,GAAxE,CAA4EL,OAA5E,EADiC,CAE/B;AACA;AACA;AACA;AACA;AACA;AACH;AAEF,KAvCkB;;AAAA,SAyCnBM,iBAzCmB,GAyCC,MAAM;AACxBzB,MAAAA,SAAS,CAACW,UAAV,CAAqB,SAArB,EACGC,GADH,CACO,QADP,EAEGC,MAFH,CAEU;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAFV;AAGD,KA7CkB;;AAAA,SA+CnBY,gBA/CmB,GA+CA,MAAM;AACvB1B,MAAAA,SAAS,CAACW,UAAV,CAAqB,SAArB,EACGC,GADH,CACO,QADP,EAEGC,MAFH,CAEU;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAFV;AAGD,KAnDkB;;AAEjB,SAAKM,KAAL,GAAa;AACXZ,MAAAA,WAAW,EAAE;AADF,KAAb;AAGA,SAAKmB,SAAL,GAAiB/B,KAAK,CAACgC,SAAN,EAAjB;AACD;;AAgDDC,EAAAA,MAAM,GAAG;AAEP,WACI;AAAM,MAAA,SAAS,EAAC,gBAAhB;AAAiC,MAAA,QAAQ,EAAE,KAAKd,cAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,WAAW,EAAC,mBAAnB;AACE,MAAA,MAAM,EAAE,KAAKW,gBADf;AAEE,MAAA,QAAQ,EAAE,KAAKrB,cAFjB;AAGE,MAAA,KAAK,EAAE,KAAKe,KAAL,CAAWZ,WAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAME;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,CADJ;AAUD;;AAnEwC;;AAuE7C,MAAMsB,eAAe,GAAIV,KAAD,KAAY;AAChCW,EAAAA,IAAI,EAAEX,KAAK,CAACY;AADoB,CAAZ,CAAxB;;AAIA,eAAejC,OAAO,CAAC+B,eAAD,CAAP,CAAyB7B,cAAzB,CAAf","sourcesContent":["import React from 'react';\nimport firebase from '../../../utilities/firebase';\nimport './NewMessageForm.css';\nimport ImageUpload from '../ImageUpload';\nimport { connect } from 'react-redux';\n\nconst firestore = firebase.firestore();\n\nclass NewMessageForm extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        new_message: ''\n      }\n      this.imageFile = React.createRef();\n    }\n  \n    handleOnChange = event => {\n      this.setState({\n        new_message: event.target.value\n      });\n      firestore.collection('setting')\n        .doc('typing')\n        .update({ status: true });\n    }\n  \n    handleOnSubmit = event => {\n      event.preventDefault();\n      const message_id = this.props.messageId;\n      \n      this.setState({ new_message: \"\" });\n      const message = {\n          message: this.state.new_message,\n          sendAt: new Date(),\n          //uid: this.state.user.uid,\n          uid: \"N8hA26hdPJNS3bi81E2yk3oITiD3s\"\n      }\n\n      if (this.state.new_message !== \"\") {\n        firestore.collection('Chat_Room').doc(message_id).collection('Message').add(message)\n          // .then(()=>{\n          //     console.log(message)\n          // })\n          // .catch(error => {\n          //     console.log(error)\n          // })\n      }\n  \n    }\n  \n    handleStartTyping = () => {\n      firestore.collection('setting')\n        .doc('typing')\n        .update({ status: true });\n    }\n  \n    handleStopTyping = () => {\n      firestore.collection('setting')\n        .doc('typing')\n        .update({ status: false });\n    }\n  \n  \n    render() {\n  \n      return (\n          <form className=\"newMessageForm\" onSubmit={this.handleOnSubmit}>\n            <input placeholder=\"your message here\"\n              onBlur={this.handleStopTyping}\n              onChange={this.handleOnChange}\n              value={this.state.new_message}>\n            </input>\n            <button type=\"submit\">Sent</button>\n          </form>        \n      );\n    }\n  }\n  \n  \nconst mapStateToProps = (state) => ({\n    user: state.currentUser,\n})\n  \nexport default connect(mapStateToProps)(NewMessageForm);\n  "]},"metadata":{},"sourceType":"module"}