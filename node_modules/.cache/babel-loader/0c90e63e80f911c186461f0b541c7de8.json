{"ast":null,"code":"var _jsxFileName = \"/media/htet/13d0eda8-9d9f-4341-9c22-cd0d2676df10/PADC Project/PADC7-FP-BloodSharing-Web/blood-sharing/src/components/container/UserBloodRequest/UserBloodRequest.js\";\nimport React from \"react\";\nimport { BrowserRouter as Router, Route, Link, Redirect } from \"react-router-dom\";\nimport firebase from '../../../utilites/firebase';\nimport { connect } from 'react-redux';\nimport { fetchRequestByUID, fetchBloodRequests, fetchDonorList } from '../../../actions/bloodRequestActions';\nimport UserBloodRequestList from '../../presentional/UserBloodRequestList';\nimport DonorList from '../DonorList';\n\nclass UserBloodRequest extends React.Component {\n  constructor(props) {\n    super(props);\n    this.props.fetchBloodRequests();\n  }\n\n  render() {\n    const uid = this.props.currentUser;\n    const requestList = this.props.bloodRequests;\n    const request = requestList.find(item => item.uid == uid);\n\n    if (request != undefined) {\n      const donors = [];\n      firebase.firestore().collection('Request_User').doc(request.id).collection('Donor').get().then(subCollectionDocs => {\n        subCollectionDocs.docs.forEach(doc => {\n          const donor_id = doc.id;\n          const donor = doc.data();\n          donors.push(donor);\n        });\n      });\n      console.log(donors);\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(UserBloodRequestList, {\n        userRequest: request,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }), React.createElement(DonorList, {\n        requestUid: request.uid,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }));\n    } else {\n      return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"No Request\");\n    }\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  currentUser: state.currentUser,\n  bloodRequests: state.bloodRequests\n});\n\nconst mapDispatchToProps = {\n  fetchBloodRequests\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(UserBloodRequest);","map":{"version":3,"sources":["/media/htet/13d0eda8-9d9f-4341-9c22-cd0d2676df10/PADC Project/PADC7-FP-BloodSharing-Web/blood-sharing/src/components/container/UserBloodRequest/UserBloodRequest.js"],"names":["React","BrowserRouter","Router","Route","Link","Redirect","firebase","connect","fetchRequestByUID","fetchBloodRequests","fetchDonorList","UserBloodRequestList","DonorList","UserBloodRequest","Component","constructor","props","render","uid","currentUser","requestList","bloodRequests","request","find","item","undefined","donors","firestore","collection","doc","id","get","then","subCollectionDocs","docs","forEach","donor_id","donor","data","push","console","log","mapStateToProps","state","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAa,IAAKC,MAA3B,EAAmCC,KAAnC,EAA0CC,IAA1C,EAA+CC,QAA/C,QAA+D,kBAA/D;AACA,OAAOC,QAAP,MAAqB,4BAArB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,EAA2BC,kBAA3B,EAA+CC,cAA/C,QAAqE,sCAArE;AACA,OAAOC,oBAAP,MAAiC,yCAAjC;AACA,OAAOC,SAAP,MAAsB,cAAtB;;AAEA,MAAMC,gBAAN,SAA+Bb,KAAK,CAACc,SAArC,CAA+C;AAC3CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKA,KAAL,CAAWP,kBAAX;AACH;;AAEDQ,EAAAA,MAAM,GAAG;AACL,UAAMC,GAAG,GAAG,KAAKF,KAAL,CAAWG,WAAvB;AACA,UAAMC,WAAW,GAAG,KAAKJ,KAAL,CAAWK,aAA/B;AACA,UAAMC,OAAO,GAAGF,WAAW,CAACG,IAAZ,CAAkBC,IAAI,IAAIA,IAAI,CAACN,GAAL,IAAYA,GAAtC,CAAhB;;AAEA,QAAGI,OAAO,IAAIG,SAAd,EAAyB;AACrB,YAAMC,MAAM,GAAG,EAAf;AAEApB,MAAAA,QAAQ,CAACqB,SAAT,GAAqBC,UAArB,CAAgC,cAAhC,EAAgDC,GAAhD,CAAoDP,OAAO,CAACQ,EAA5D,EAAgEF,UAAhE,CAA2E,OAA3E,EAAoFG,GAApF,GACCC,IADD,CACOC,iBAAiB,IAAI;AACxBA,QAAAA,iBAAiB,CAACC,IAAlB,CAAuBC,OAAvB,CAAgCN,GAAG,IAAI;AACnC,gBAAMO,QAAQ,GAAGP,GAAG,CAACC,EAArB;AACA,gBAAMO,KAAK,GAAGR,GAAG,CAACS,IAAJ,EAAd;AACAZ,UAAAA,MAAM,CAACa,IAAP,CAAYF,KAAZ;AACH,SAJD;AAKH,OAPD;AAQAG,MAAAA,OAAO,CAACC,GAAR,CAAYf,MAAZ;AAEA,aACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,oBAAD;AAAsB,QAAA,WAAW,EAAEJ,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAMI,oBAAC,SAAD;AAAW,QAAA,UAAU,EAAEA,OAAO,CAACJ,GAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANJ,CADJ;AAYH,KAzBD,MA0BI;AACA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ;AAGH;AAEJ;;AA3C0C;;AA8C/C,MAAMwB,eAAe,GAAGC,KAAK,KAAK;AAC9BxB,EAAAA,WAAW,EAAGwB,KAAK,CAACxB,WADU;AAE9BE,EAAAA,aAAa,EAAEsB,KAAK,CAACtB;AAFS,CAAL,CAA7B;;AAKE,MAAMuB,kBAAkB,GAAG;AACzBnC,EAAAA;AADyB,CAA3B;AAIA,eAAeF,OAAO,CAACmC,eAAD,EAAiBE,kBAAjB,CAAP,CAA4C/B,gBAA5C,CAAf","sourcesContent":["import React from \"react\";\nimport { BrowserRouter as  Router, Route, Link,Redirect } from \"react-router-dom\";\nimport firebase from '../../../utilites/firebase';\n\nimport { connect } from 'react-redux';\nimport { fetchRequestByUID,fetchBloodRequests, fetchDonorList } from '../../../actions/bloodRequestActions';\nimport UserBloodRequestList from '../../presentional/UserBloodRequestList';\nimport DonorList from '../DonorList';\n\nclass UserBloodRequest extends React.Component {\n    constructor(props) {\n        super(props);\n        this.props.fetchBloodRequests();\n    }\n\n    render() {\n        const uid = this.props.currentUser;\n        const requestList = this.props.bloodRequests;\n        const request = requestList.find( item => item.uid == uid); \n\n        if(request != undefined) {\n            const donors = [];\n\n            firebase.firestore().collection('Request_User').doc(request.id).collection('Donor').get()\n            .then( subCollectionDocs => {\n                subCollectionDocs.docs.forEach( doc => {\n                    const donor_id = doc.id;\n                    const donor = doc.data();\n                    donors.push(donor);                       \n                })\n            })\n            console.log(donors);\n\n            return (\n                <React.Fragment>\n                    <UserBloodRequestList userRequest={request}/> \n                    {/* {donors.map((donor, index) => {\n                        return <p>{index}</p>\n                        // <DonorList key={index} donor={donor} requestUid={request.uid} />\n                    })} */}\n                    <DonorList requestUid={request.uid}/>\n                   \n                </React.Fragment>\n            )\n            \n        }\n        else{\n            return (\n                <p>No Request</p>\n            )\n        }\n               \n    }\n}\n\nconst mapStateToProps = state => ({\n    currentUser : state.currentUser,\n    bloodRequests: state.bloodRequests,\n  });\n  \n  const mapDispatchToProps = {\n    fetchBloodRequests,\n  }\n  \n  export default connect(mapStateToProps,mapDispatchToProps)(UserBloodRequest);"]},"metadata":{},"sourceType":"module"}