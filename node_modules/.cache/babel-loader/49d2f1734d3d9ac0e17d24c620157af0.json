{"ast":null,"code":"import { retrieveData, storeData } from \"../utilites/localStorage\"; //import firestore from '../utilites/firebase';\n\nexport const fetchUsers = () => dispatch => {\n  const users = retrieveData('users');\n  dispatch({\n    type: 'FETCH_USERS',\n    payload: users\n  });\n};\nexport const insertUser = (user, cb) => dispatch => {\n  const users = retrieveData('users');\n\n  if (users !== null && users.length > 0) {\n    const mapped_array = users.map(i => parseInt(i.id));\n    const max_id = Math.max(...mapped_array);\n    user.id = max_id + 1;\n  } else {\n    user.id = 1;\n  }\n\n  users.push(user);\n  storeData('users', users);\n  dispatch({\n    type: 'ADD_NEW_USER',\n    user: user\n  });\n  cb();\n};\nexport const loginUserEvent = (user, cb) => dispatch => {\n  dispatch({\n    type: \"LOGIN\",\n    user: user\n  });\n  cb();\n}; // export const insertUser = (user, cb) => dispatch => {\n//     firestore.collection('User').add(user).then( (data) => {\n//       user.id = data.id;\n//       dispatch({\n//         type: 'ADD_NEW_USER',\n//         user: user\n//       });\n//       cb();\n//     })\n//   };\n\nexport const updateUser = user => dispatch => {\n  const users = retrieveData(\"users\");\n};","map":{"version":3,"sources":["/media/htet/13d0eda8-9d9f-4341-9c22-cd0d2676df10/PADC Project/PADC7-FP-BloodSharing-Web/blood-sharing/src/actions/userActions.js"],"names":["retrieveData","storeData","fetchUsers","dispatch","users","type","payload","insertUser","user","cb","length","mapped_array","map","i","parseInt","id","max_id","Math","max","push","loginUserEvent","updateUser"],"mappings":"AAAA,SAAQA,YAAR,EAAqBC,SAArB,QAAqC,0BAArC,C,CACA;;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAMC,QAAQ,IAAI;AACxC,QAAMC,KAAK,GAAGJ,YAAY,CAAC,OAAD,CAA1B;AACAG,EAAAA,QAAQ,CAAC;AACLE,IAAAA,IAAI,EAAE,aADD;AAELC,IAAAA,OAAO,EAAEF;AAFJ,GAAD,CAAR;AAIH,CANM;AAQP,OAAO,MAAMG,UAAU,GAAG,CAACC,IAAD,EAAOC,EAAP,KAAcN,QAAQ,IAAI;AAChD,QAAMC,KAAK,GAAGJ,YAAY,CAAC,OAAD,CAA1B;;AACA,MAAII,KAAK,KAAK,IAAV,IAAkBA,KAAK,CAACM,MAAN,GAAe,CAArC,EAAwC;AACpC,UAAMC,YAAY,GAAGP,KAAK,CAACQ,GAAN,CAAUC,CAAC,IAAIC,QAAQ,CAACD,CAAC,CAACE,EAAH,CAAvB,CAArB;AACA,UAAMC,MAAM,GAAGC,IAAI,CAACC,GAAL,CAAS,GAAGP,YAAZ,CAAf;AACAH,IAAAA,IAAI,CAACO,EAAL,GAAUC,MAAM,GAAG,CAAnB;AACH,GAJD,MAKK;AACDR,IAAAA,IAAI,CAACO,EAAL,GAAU,CAAV;AACH;;AACDX,EAAAA,KAAK,CAACe,IAAN,CAAWX,IAAX;AACAP,EAAAA,SAAS,CAAC,OAAD,EAAUG,KAAV,CAAT;AAEAD,EAAAA,QAAQ,CAAC;AACLE,IAAAA,IAAI,EAAE,cADD;AAELG,IAAAA,IAAI,EAAEA;AAFD,GAAD,CAAR;AAKAC,EAAAA,EAAE;AACH,CAnBI;AAqBP,OAAO,MAAMW,cAAc,GAAG,CAACZ,IAAD,EAAMC,EAAN,KAAaN,QAAQ,IAAG;AAClDA,EAAAA,QAAQ,CAAC;AACLE,IAAAA,IAAI,EAAG,OADF;AAELG,IAAAA,IAAI,EAAGA;AAFF,GAAD,CAAR;AAIAC,EAAAA,EAAE;AACL,CANM,C,CAQP;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;;AAEA,OAAO,MAAMY,UAAU,GAAIb,IAAD,IAAUL,QAAQ,IAAI;AAC5C,QAAMC,KAAK,GAAGJ,YAAY,CAAC,OAAD,CAA1B;AAEH,CAHM","sourcesContent":["import {retrieveData,storeData} from \"../utilites/localStorage\";\n//import firestore from '../utilites/firebase';\n\nexport const fetchUsers = () => dispatch => {\n    const users = retrieveData('users');\n    dispatch({\n        type: 'FETCH_USERS',\n        payload: users\n    });\n};\n\nexport const insertUser = (user, cb) => dispatch => {\n    const users = retrieveData('users');\n    if (users !== null && users.length > 0) {\n        const mapped_array = users.map(i => parseInt(i.id));\n        const max_id = Math.max(...mapped_array);\n        user.id = max_id + 1;\n    } \n    else {\n        user.id = 1;\n    }\n    users.push(user);\n    storeData('users', users);\n\n    dispatch({\n        type: 'ADD_NEW_USER',\n        user: user\n    });\n  \n    cb();\n  };\n  \nexport const loginUserEvent = (user,cb) => dispatch =>{\n    dispatch({\n        type : \"LOGIN\",\n        user : user\n    });\n    cb();\n}\n\n// export const insertUser = (user, cb) => dispatch => {\n//     firestore.collection('User').add(user).then( (data) => {\n//       user.id = data.id;\n//       dispatch({\n//         type: 'ADD_NEW_USER',\n//         user: user\n//       });\n    \n//       cb();\n//     })\n    \n  \n//   };\n\nexport const updateUser = (user) => dispatch => {\n    const users = retrieveData(\"users\");\n\n}\n"]},"metadata":{},"sourceType":"module"}