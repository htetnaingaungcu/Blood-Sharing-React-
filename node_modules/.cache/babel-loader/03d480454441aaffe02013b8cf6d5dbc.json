{"ast":null,"code":"import { retrieveData, storeData } from \"../utilites/localStorage\"; //import firestore from '../utilites/firebase';\n\nexport const insertUser = user => dispatch => {\n  const users = retrieveData(\"users\");\n  const mapped_array = users.map(i => parseInt(i.id));\n  const max_id = Math.max(...mapped_array);\n  user.id = max_id + 1;\n  users.push(user);\n  storeData(\"users\", users);\n  dispatch({\n    type: 'ADD_NEW_USER',\n    user: user\n  });\n}; // export const insertUser = (user, cb) => dispatch => {\n//     firestore.collection('User').add(user).then( (data) => {\n//       user.id = data.id;\n//       dispatch({\n//         type: 'ADD_NEW_USER',\n//         user: user\n//       });\n//       cb();\n//     })\n//   };\n\nexport const updateUser = user => dispatch => {\n  const users = retrieveData(\"users\");\n};","map":{"version":3,"sources":["/media/htet/13d0eda8-9d9f-4341-9c22-cd0d2676df10/PADC Project/PADC7-FP-BloodSharing-Web/blood-sharing/src/actions/userActions.js"],"names":["retrieveData","storeData","insertUser","user","dispatch","users","mapped_array","map","i","parseInt","id","max_id","Math","max","push","type","updateUser"],"mappings":"AAAA,SAAQA,YAAR,EAAqBC,SAArB,QAAqC,0BAArC,C,CACA;;AAGA,OAAO,MAAMC,UAAU,GAAIC,IAAD,IAAUC,QAAQ,IAAI;AAC5C,QAAMC,KAAK,GAAGL,YAAY,CAAC,OAAD,CAA1B;AACA,QAAMM,YAAY,GAAGD,KAAK,CAACE,GAAN,CAAWC,CAAC,IAAIC,QAAQ,CAACD,CAAC,CAACE,EAAH,CAAxB,CAArB;AACA,QAAMC,MAAM,GAAGC,IAAI,CAACC,GAAL,CAAS,GAAGP,YAAZ,CAAf;AACAH,EAAAA,IAAI,CAACO,EAAL,GAAUC,MAAM,GAAG,CAAnB;AACAN,EAAAA,KAAK,CAACS,IAAN,CAAWX,IAAX;AACAF,EAAAA,SAAS,CAAC,OAAD,EAAUI,KAAV,CAAT;AAEAD,EAAAA,QAAQ,CAAC;AACLW,IAAAA,IAAI,EAAE,cADD;AAELZ,IAAAA,IAAI,EAAGA;AAFF,GAAD,CAAR;AAIH,CAZM,C,CAcP;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;;AAEA,OAAO,MAAMa,UAAU,GAAIb,IAAD,IAAUC,QAAQ,IAAI;AAC5C,QAAMC,KAAK,GAAGL,YAAY,CAAC,OAAD,CAA1B;AAEH,CAHM","sourcesContent":["import {retrieveData,storeData} from \"../utilites/localStorage\";\n//import firestore from '../utilites/firebase';\n\n\nexport const insertUser = (user) => dispatch => {\n    const users = retrieveData(\"users\");\n    const mapped_array = users.map( i => parseInt(i.id));\n    const max_id = Math.max(...mapped_array);\n    user.id = max_id + 1;\n    users.push(user);\n    storeData(\"users\", users);\n\n    dispatch({\n        type: 'ADD_NEW_USER',\n        user : user\n    });\n};\n\n// export const insertUser = (user, cb) => dispatch => {\n//     firestore.collection('User').add(user).then( (data) => {\n//       user.id = data.id;\n//       dispatch({\n//         type: 'ADD_NEW_USER',\n//         user: user\n//       });\n    \n//       cb();\n//     })\n    \n  \n//   };\n\nexport const updateUser = (user) => dispatch => {\n    const users = retrieveData(\"users\");\n\n}\n"]},"metadata":{},"sourceType":"module"}