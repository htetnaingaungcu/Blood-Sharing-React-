{"ast":null,"code":"var _jsxFileName = \"/media/htet/13d0eda8-9d9f-4341-9c22-cd0d2676df10/PADC Project/PADC7-FP-BloodSharing-Web/blood-sharing/src/components/container/BloodRequestList/BloodRequestList.js\";\nimport React from \"react\";\nimport { BrowserRouter as Router, Route, Link, Redirect } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport { fetchRequestByBloodType } from '../../../actions/bloodRequestActions';\nimport { fetchDonors } from '../../../actions/donorActions';\nimport { fetchUsers } from '../../../actions/userActions';\nimport BloodRequest from \"../../presentional/BloodRequest/BloodRequest\";\nimport { Container } from \"react-bootstrap\";\n\nclass BloodRequestList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.props.fetchDonors();\n    this.props.fetchUsers();\n    const uid = this.props.currentUser.uid;\n    const donorList = this.props.donors; //console.log(uid)\n    //console.log(\"Donor List\",donorList)\n\n    const donor = donorList.find(item => item.uid == uid); //console.log(\"donor\", donor)\n\n    if (donor) {\n      const users = this.props.users;\n      const user = users.find(item => item.id == uid);\n      const bloodType = user.bloodType;\n      this.props.fetchRequestByBloodType(bloodType);\n    }\n  }\n\n  render() {\n    const bloodRequests = this.props.bloodRequests;\n    console.log(bloodRequests);\n\n    if (bloodRequests !== undefined) {\n      var request_arr = [];\n      bloodRequests.map((bloodRequest, index) => {\n        request_arr.push(React.createElement(BloodRequest, {\n          key: index,\n          bloodRequest: bloodRequest,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }));\n      });\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      });\n    }\n\n    return \"display knowledge for request user\";\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  bloodRequests: state.bloodRequests,\n  currentUser: state.currentUser,\n  donors: state.donors,\n  users: state.users\n});\n\nconst mapDispatchToProps = {\n  fetchRequestByBloodType,\n  fetchDonors,\n  fetchUsers\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(BloodRequestList);","map":{"version":3,"sources":["/media/htet/13d0eda8-9d9f-4341-9c22-cd0d2676df10/PADC Project/PADC7-FP-BloodSharing-Web/blood-sharing/src/components/container/BloodRequestList/BloodRequestList.js"],"names":["React","BrowserRouter","Router","Route","Link","Redirect","connect","fetchRequestByBloodType","fetchDonors","fetchUsers","BloodRequest","Container","BloodRequestList","Component","constructor","props","uid","currentUser","donorList","donors","donor","find","item","users","user","id","bloodType","render","bloodRequests","console","log","undefined","request_arr","map","bloodRequest","index","push","mapStateToProps","state","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAa,IAAKC,MAA3B,EAAmCC,KAAnC,EAA0CC,IAA1C,EAA+CC,QAA/C,QAA+D,kBAA/D;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,uBAAT,QAAwC,sCAAxC;AACA,SAASC,WAAT,QAA4B,+BAA5B;AACA,SAASC,UAAT,QAA2B,8BAA3B;AACA,OAAOC,YAAP,MAAyB,8CAAzB;AACA,SAASC,SAAT,QAA0B,iBAA1B;;AAEA,MAAMC,gBAAN,SAA+BZ,KAAK,CAACa,SAArC,CAA+C;AAC3CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKA,KAAL,CAAWP,WAAX;AACA,SAAKO,KAAL,CAAWN,UAAX;AAEA,UAAMO,GAAG,GAAG,KAAKD,KAAL,CAAWE,WAAX,CAAuBD,GAAnC;AACA,UAAME,SAAS,GAAG,KAAKH,KAAL,CAAWI,MAA7B,CANe,CAOf;AACA;;AAEA,UAAMC,KAAK,GAAGF,SAAS,CAACG,IAAV,CAAgBC,IAAI,IAAIA,IAAI,CAACN,GAAL,IAAYA,GAApC,CAAd,CAVe,CAWf;;AACA,QAAGI,KAAH,EAAS;AACL,YAAMG,KAAK,GAAG,KAAKR,KAAL,CAAWQ,KAAzB;AACA,YAAMC,IAAI,GAAGD,KAAK,CAACF,IAAN,CAAYC,IAAI,IAAIA,IAAI,CAACG,EAAL,IAAWT,GAA/B,CAAb;AACA,YAAMU,SAAS,GAAGF,IAAI,CAACE,SAAvB;AACA,WAAKX,KAAL,CAAWR,uBAAX,CAAmCmB,SAAnC;AACH;AAEJ;;AAEDC,EAAAA,MAAM,GAAG;AACL,UAAMC,aAAa,GAAG,KAAKb,KAAL,CAAWa,aAAjC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,aAAZ;;AACA,QAAGA,aAAa,KAAKG,SAArB,EAA+B;AAC3B,UAAIC,WAAW,GAAG,EAAlB;AAEAJ,MAAAA,aAAa,CAACK,GAAd,CAAkB,CAACC,YAAD,EAAeC,KAAf,KAAyB;AACvCH,QAAAA,WAAW,CAACI,IAAZ,CAAiB,oBAAC,YAAD;AAAc,UAAA,GAAG,EAAED,KAAnB;AAA0B,UAAA,YAAY,EAAED,YAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAjB;AACH,OAFD;AAGA,aACZ,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADY;AAGH;;AAED,WAAO,oCAAP;AAEH;;AAtC0C;;AAyC/C,MAAMG,eAAe,GAAGC,KAAK,KAAK;AAC9BV,EAAAA,aAAa,EAAEU,KAAK,CAACV,aADS;AAE9BX,EAAAA,WAAW,EAAGqB,KAAK,CAACrB,WAFU;AAG9BE,EAAAA,MAAM,EAAGmB,KAAK,CAACnB,MAHe;AAI9BI,EAAAA,KAAK,EAAGe,KAAK,CAACf;AAJgB,CAAL,CAA7B;;AAOA,MAAMgB,kBAAkB,GAAG;AACvBhC,EAAAA,uBADuB;AAEvBC,EAAAA,WAFuB;AAGvBC,EAAAA;AAHuB,CAA3B;AAMA,eAAeH,OAAO,CAAC+B,eAAD,EAAiBE,kBAAjB,CAAP,CAA4C3B,gBAA5C,CAAf","sourcesContent":["import React from \"react\";\nimport { BrowserRouter as  Router, Route, Link,Redirect } from \"react-router-dom\";\n\nimport { connect } from 'react-redux';\nimport { fetchRequestByBloodType } from '../../../actions/bloodRequestActions';\nimport { fetchDonors } from '../../../actions/donorActions';\nimport { fetchUsers } from '../../../actions/userActions';\nimport BloodRequest from \"../../presentional/BloodRequest/BloodRequest\";\nimport { Container } from \"react-bootstrap\";\n\nclass BloodRequestList extends React.Component {\n    constructor(props) {\n        super(props);  \n        this.props.fetchDonors();\n        this.props.fetchUsers();\n\n        const uid = this.props.currentUser.uid;\n        const donorList = this.props.donors;\n        //console.log(uid)\n        //console.log(\"Donor List\",donorList)\n        \n        const donor = donorList.find( item => item.uid == uid);\n        //console.log(\"donor\", donor)\n        if(donor){\n            const users = this.props.users;\n            const user = users.find( item => item.id == uid);\n            const bloodType = user.bloodType;   \n            this.props.fetchRequestByBloodType(bloodType);\n        }      \n              \n    }\n\n    render() {\n        const bloodRequests = this.props.bloodRequests;\n        console.log(bloodRequests)\n        if(bloodRequests !== undefined){\n            var request_arr = [];\n          \n            bloodRequests.map((bloodRequest, index) => {  \n                request_arr.push(<BloodRequest key={index} bloodRequest={bloodRequest} />);\n            });\n            return (\n<Container></Container>\n                );\n        }\n       \n        return \"display knowledge for request user\";\n        \n    }\n}\n\nconst mapStateToProps = state => ({\n    bloodRequests: state.bloodRequests,\n    currentUser : state.currentUser,\n    donors : state.donors,\n    users : state.users\n  });\n  \nconst mapDispatchToProps = {\n    fetchRequestByBloodType,\n    fetchDonors,\n    fetchUsers\n}\n  \nexport default connect(mapStateToProps,mapDispatchToProps)(BloodRequestList);"]},"metadata":{},"sourceType":"module"}