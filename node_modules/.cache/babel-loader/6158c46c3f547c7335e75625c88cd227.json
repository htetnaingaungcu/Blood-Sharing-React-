{"ast":null,"code":"var _jsxFileName = \"/media/htet/13d0eda8-9d9f-4341-9c22-cd0d2676df10/PADC Project/PADC7-FP-BloodSharing-Web/blood-sharing/src/components/container/DonationSecondForm/DonationSecondForm.js\";\nimport React from \"react\";\nimport { BrowserRouter as Router, Route, Link, Redirect } from \"react-router-dom\";\nimport Calendar from 'react-calendar';\nimport { connect } from \"react-redux\";\nimport { updateUser } from \"../../../actions/userActions\";\n\nclass DonationSecondForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleOnChange = date => {\n      this.setState({\n        lastestDonationDate: date\n      });\n    };\n\n    this.handleOnSubmit = event => {\n      event.preventDefault();\n      const user_id = this.props.currentUser.uid;\n      const userData = {\n        latestDonatedDate: this.state.lastestDonationDate,\n        weight: this.weight.current.value\n      };\n      this.props.updateUser(userData, user_id);\n      this.setState({\n        completeDonationSecondForm: true\n      });\n    };\n\n    this.weight = React.createRef();\n    this.state = {\n      lastestDonationDate: new Date(),\n      completeDonationSecondForm: false\n    };\n  }\n\n  render() {\n    console.log(this.state.completeDonationSecondForm);\n    if (this.state.completeDonationSecondForm) return React.createElement(Redirect, {\n      to: \"/donor\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    });\n    return React.createElement(\"form\", {\n      onSubmit: this.handleOnSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"lastestDonationDate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Lastest Donation Date : \"), React.createElement(Calendar, {\n      value: this.state.latestDonatedDate,\n      onChange: this.handleOnChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"weight\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Weight : \"), React.createElement(\"input\", {\n      id: \"weight\",\n      ref: this.weight,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Cancel\")), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Yes, I' Done\")));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  currentUser: state.currentUser\n});\n\nconst mapDispatchToProps = {\n  updateUser\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(DonationSecondForm);","map":{"version":3,"sources":["/media/htet/13d0eda8-9d9f-4341-9c22-cd0d2676df10/PADC Project/PADC7-FP-BloodSharing-Web/blood-sharing/src/components/container/DonationSecondForm/DonationSecondForm.js"],"names":["React","BrowserRouter","Router","Route","Link","Redirect","Calendar","connect","updateUser","DonationSecondForm","Component","constructor","props","handleOnChange","date","setState","lastestDonationDate","handleOnSubmit","event","preventDefault","user_id","currentUser","uid","userData","latestDonatedDate","state","weight","current","value","completeDonationSecondForm","createRef","Date","render","console","log","mapStateToProps","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { BrowserRouter as  Router, Route, Link,Redirect } from \"react-router-dom\";\nimport Calendar from 'react-calendar';\n\n\nimport { connect } from \"react-redux\";\nimport { updateUser } from \"../../../actions/userActions\";\n\nclass DonationSecondForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.weight = React.createRef();\n        \n        this.state = {\n            lastestDonationDate: new Date(),\n            completeDonationSecondForm: false\n        };\n    }\n    handleOnChange = date => {\n        this.setState({\n            lastestDonationDate: date\n        });\n    }\n    handleOnSubmit = event => {\n        event.preventDefault();\n\n        const user_id = this.props.currentUser.uid;\n\n        const userData = {\n            latestDonatedDate: this.state.lastestDonationDate,\n            weight: this.weight.current.value\n        };\n        this.props.updateUser(userData, user_id);\n    \n        this.setState({\n            completeDonationSecondForm: true\n        });\n\n        \n    };\n\n    render() {\n        console.log(this.state.completeDonationSecondForm);\n        if (this.state.completeDonationSecondForm) \n        return <Redirect to='/donor' />;\n\n        return (\n            <form onSubmit={this.handleOnSubmit}>\n                <label htmlFor=\"lastestDonationDate\">Lastest Donation Date : </label>\n                \n                <Calendar value={this.state.latestDonatedDate} onChange={this.handleOnChange}/>\n                <label htmlFor=\"weight\">Weight : </label>\n                <input id=\"weight\" ref={this.weight} required />\n                <br />\n                \n                <div>\n                    <Link to=\"/\"><button type=\"submit\">Cancel</button></Link>\n                    <button type=\"submit\">Yes, I' Done</button>\n                </div>               \n                \n            </form>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    currentUser : state.currentUser\n})\n\nconst mapDispatchToProps = {\n    updateUser\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DonationSecondForm);"]},"metadata":{},"sourceType":"module"}