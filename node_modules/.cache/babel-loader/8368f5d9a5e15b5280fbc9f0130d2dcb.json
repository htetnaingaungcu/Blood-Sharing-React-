{"ast":null,"code":"var _jsxFileName = \"/media/htet/13d0eda8-9d9f-4341-9c22-cd0d2676df10/PADC Project/PADC7-FP-BloodSharing-Web/blood-sharing/src/components/container/BloodRequestList/BloodRequestList.js\";\nimport React from \"react\";\nimport { BrowserRouter as Router, Route, Link, Redirect } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport { fetchRequestByBloodType } from '../../../actions/bloodRequestActions';\nimport { fetchDonors } from '../../../actions/donorActions';\nimport { fetchUsers } from '../../../actions/userActions';\nimport BloodRequest from \"../../presentional/BloodRequest/BloodRequest\";\n\nclass BloodRequestList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.props.fetchRequestByBloodType();\n    this.props.fetchDonors();\n    this.props.fetchUsers();\n    this.state = {\n      redirectToReferrer: false\n    };\n  }\n\n  render() {\n    const bloodRequests = this.props.bloodRequests;\n    const uid = this.props.currentUser.uid;\n    const donors = this.props.fetchDonors; // const donor = donors.find( donor => item.uid == uid);\n    // console.log(donors);\n    // if(donor){\n    //     const users = this.props.fetchUsers;\n    //     const user = users.find( item => item.id == uid);\n    // }\n\n    if (bloodRequests !== undefined) {\n      return bloodRequests.map((bloodRequest, index) => {\n        return React.createElement(BloodRequest, {\n          key: index,\n          bloodRequest: bloodRequest,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        });\n      });\n    }\n\n    return null;\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  bloodRequests: state.bloodRequests,\n  currentUser: state.currentUser,\n  fetchDonors: state.fetchDonors,\n  fetchUsers: state.fetchUsers\n});\n\nconst mapDispatchToProps = {\n  fetchRequestByBloodType,\n  fetchDonors,\n  fetchUsers\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(BloodRequestList);","map":{"version":3,"sources":["/media/htet/13d0eda8-9d9f-4341-9c22-cd0d2676df10/PADC Project/PADC7-FP-BloodSharing-Web/blood-sharing/src/components/container/BloodRequestList/BloodRequestList.js"],"names":["React","BrowserRouter","Router","Route","Link","Redirect","connect","fetchRequestByBloodType","fetchDonors","fetchUsers","BloodRequest","BloodRequestList","Component","constructor","props","state","redirectToReferrer","render","bloodRequests","uid","currentUser","donors","undefined","map","bloodRequest","index","mapStateToProps","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAa,IAAKC,MAA3B,EAAmCC,KAAnC,EAA0CC,IAA1C,EAA+CC,QAA/C,QAA+D,kBAA/D;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,uBAAT,QAAwC,sCAAxC;AACA,SAASC,WAAT,QAA4B,+BAA5B;AACA,SAASC,UAAT,QAA2B,8BAA3B;AACA,OAAOC,YAAP,MAAyB,8CAAzB;;AAEA,MAAMC,gBAAN,SAA+BX,KAAK,CAACY,SAArC,CAA+C;AAC3CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKA,KAAL,CAAWP,uBAAX;AACA,SAAKO,KAAL,CAAWN,WAAX;AACA,SAAKM,KAAL,CAAWL,UAAX;AAEA,SAAKM,KAAL,GAAa;AAClBC,MAAAA,kBAAkB,EAAG;AADH,KAAb;AAGH;;AAEDC,EAAAA,MAAM,GAAG;AACL,UAAMC,aAAa,GAAG,KAAKJ,KAAL,CAAWI,aAAjC;AAEA,UAAMC,GAAG,GAAG,KAAKL,KAAL,CAAWM,WAAX,CAAuBD,GAAnC;AACA,UAAME,MAAM,GAAG,KAAKP,KAAL,CAAWN,WAA1B,CAJK,CAML;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAGU,aAAa,KAAKI,SAArB,EAA+B;AAC3B,aAAOJ,aAAa,CAACK,GAAd,CAAkB,CAACC,YAAD,EAAeC,KAAf,KAAyB;AAC9C,eAAO,oBAAC,YAAD;AAAc,UAAA,GAAG,EAAEA,KAAnB;AAA0B,UAAA,YAAY,EAAED,YAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,OAFM,CAAP;AAGH;;AAED,WAAO,IAAP;AAEH;;AAjC0C;;AAoC/C,MAAME,eAAe,GAAGX,KAAK,KAAK;AAC9BG,EAAAA,aAAa,EAAEH,KAAK,CAACG,aADS;AAE9BE,EAAAA,WAAW,EAAGL,KAAK,CAACK,WAFU;AAG9BZ,EAAAA,WAAW,EAAGO,KAAK,CAACP,WAHU;AAI9BC,EAAAA,UAAU,EAAGM,KAAK,CAACN;AAJW,CAAL,CAA7B;;AAOE,MAAMkB,kBAAkB,GAAG;AACzBpB,EAAAA,uBADyB;AAEzBC,EAAAA,WAFyB;AAGzBC,EAAAA;AAHyB,CAA3B;AAMA,eAAeH,OAAO,CAACoB,eAAD,EAAiBC,kBAAjB,CAAP,CAA4ChB,gBAA5C,CAAf","sourcesContent":["import React from \"react\";\nimport { BrowserRouter as  Router, Route, Link,Redirect } from \"react-router-dom\";\n\nimport { connect } from 'react-redux';\nimport { fetchRequestByBloodType } from '../../../actions/bloodRequestActions';\nimport { fetchDonors } from '../../../actions/donorActions';\nimport { fetchUsers } from '../../../actions/userActions';\nimport BloodRequest from \"../../presentional/BloodRequest/BloodRequest\";\n\nclass BloodRequestList extends React.Component {\n    constructor(props) {\n        super(props);        \n        this.props.fetchRequestByBloodType();\n        this.props.fetchDonors();\n        this.props.fetchUsers();\n\n        this.state = {\n\t\t\tredirectToReferrer : false\n\t\t};\n    }\n\n    render() {\n        const bloodRequests = this.props.bloodRequests;\n\n        const uid = this.props.currentUser.uid;\n        const donors = this.props.fetchDonors;\n        \n        // const donor = donors.find( donor => item.uid == uid);\n        // console.log(donors);\n        // if(donor){\n        //     const users = this.props.fetchUsers;\n        //     const user = users.find( item => item.id == uid);\n        // }\n\n        if(bloodRequests !== undefined){\n            return bloodRequests.map((bloodRequest, index) => {  \n                return <BloodRequest key={index} bloodRequest={bloodRequest} />;\n            });\n        }\n\n        return null;\n        \n    }\n}\n\nconst mapStateToProps = state => ({\n    bloodRequests: state.bloodRequests,\n    currentUser : state.currentUser,\n    fetchDonors : state.fetchDonors,\n    fetchUsers : state.fetchUsers\n  });\n  \n  const mapDispatchToProps = {\n    fetchRequestByBloodType,\n    fetchDonors,\n    fetchUsers\n  }\n  \n  export default connect(mapStateToProps,mapDispatchToProps)(BloodRequestList);"]},"metadata":{},"sourceType":"module"}