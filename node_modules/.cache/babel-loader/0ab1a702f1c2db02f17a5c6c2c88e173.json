{"ast":null,"code":"var _jsxFileName = \"/media/htet/13d0eda8-9d9f-4341-9c22-cd0d2676df10/PADC Project/PADC7-FP-BloodSharing-Web/blood-sharing/src/components/container/BloodRequestDetail/BloodRequestDetail.js\";\nimport React from \"react\";\nimport { BrowserRouter as Router, Route, Link, Redirect } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport { fetchBloodRequests } from '../../../actions/bloodRequestActions';\n\nclass BloodRequestDetail extends React.Component {\n  constructor(props) {\n    super(props);\n    this.props.fetchBloodRequests();\n  }\n\n  render() {\n    const id = this.props.match.params.id;\n    const bloodRequests = this.props.bloodRequests;\n    const currentBloodRequest = bloodRequests.find(item => item.id == id); //console.log(currentBloodRequest);\n\n    if (currentBloodRequest === undefined) return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, \"404 - Content not found\");\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"Username: \", currentBloodRequest.username), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"Phone: \", currentBloodRequest.phone), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"Blood Type: \", currentBloodRequest.bloodType), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"Blood Count: \", currentBloodRequest.bloodCount), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"Reason: \", currentBloodRequest.reason), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"Location: \", currentBloodRequest.location), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"Request Date: \", Date(currentBloodRequest.requestedDate)), React.createElement(Link, {\n      to: \"/chat/\" + currentBloodRequest.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Donate\")));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  bloodRequests: state.bloodRequests\n});\n\nconst mapDispatchToProps = {\n  fetchBloodRequests\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(BloodRequestDetail);","map":{"version":3,"sources":["/media/htet/13d0eda8-9d9f-4341-9c22-cd0d2676df10/PADC Project/PADC7-FP-BloodSharing-Web/blood-sharing/src/components/container/BloodRequestDetail/BloodRequestDetail.js"],"names":["React","BrowserRouter","Router","Route","Link","Redirect","connect","fetchBloodRequests","BloodRequestDetail","Component","constructor","props","render","id","match","params","bloodRequests","currentBloodRequest","find","item","undefined","username","phone","bloodType","bloodCount","reason","location","Date","requestedDate","mapStateToProps","state","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAa,IAAKC,MAA3B,EAAmCC,KAAnC,EAA0CC,IAA1C,EAA+CC,QAA/C,QAA+D,kBAA/D;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,sCAAnC;;AAEA,MAAMC,kBAAN,SAAiCR,KAAK,CAACS,SAAvC,CAAiD;AAE7CC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKA,KAAL,CAAWJ,kBAAX;AACH;;AAEDK,EAAAA,MAAM,GAAG;AACL,UAAMC,EAAE,GAAG,KAAKF,KAAL,CAAWG,KAAX,CAAiBC,MAAjB,CAAwBF,EAAnC;AACA,UAAMG,aAAa,GAAG,KAAKL,KAAL,CAAWK,aAAjC;AACA,UAAMC,mBAAmB,GAAGD,aAAa,CAACE,IAAd,CAAoBC,IAAI,IAAIA,IAAI,CAACN,EAAL,IAAWA,EAAvC,CAA5B,CAHK,CAIL;;AAEA,QAAGI,mBAAmB,KAAKG,SAA3B,EAAsC,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAAP;AAEtC,WACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAcH,mBAAmB,CAACI,QAAlC,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAWJ,mBAAmB,CAACK,KAA/B,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAgBL,mBAAmB,CAACM,SAApC,CAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAiBN,mBAAmB,CAACO,UAArC,CAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAYP,mBAAmB,CAACQ,MAAhC,CALJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAcR,mBAAmB,CAACS,QAAlC,CANJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAmBC,IAAI,CAACV,mBAAmB,CAACW,aAArB,CAAvB,CAPJ,EAQI,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAE,WAASX,mBAAmB,CAACJ,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA3C,CARJ,CADJ;AAYH;;AA3B4C;;AA8BjD,MAAMgB,eAAe,GAAGC,KAAK,KAAK;AAC9Bd,EAAAA,aAAa,EAAGc,KAAK,CAACd;AADQ,CAAL,CAA7B;;AAIA,MAAMe,kBAAkB,GAAG;AACvBxB,EAAAA;AADuB,CAA3B;AAIA,eAAeD,OAAO,CAAEuB,eAAF,EAAkBE,kBAAlB,CAAP,CAA6CvB,kBAA7C,CAAf","sourcesContent":["import React from \"react\";\nimport { BrowserRouter as  Router, Route, Link,Redirect } from \"react-router-dom\";\n\nimport { connect } from 'react-redux';\nimport { fetchBloodRequests } from '../../../actions/bloodRequestActions';\n\nclass BloodRequestDetail extends React.Component {\n\n    constructor(props){\n        super(props);\n        this.props.fetchBloodRequests();\n    }\n\n    render() {\n        const id = this.props.match.params.id;\n        const bloodRequests = this.props.bloodRequests;\n        const currentBloodRequest = bloodRequests.find( item => item.id == id);\n        //console.log(currentBloodRequest);\n\n        if(currentBloodRequest === undefined) return <div>404 - Content not found</div>\n\n        return(\n            <React.Fragment>\n                <p>Username: {currentBloodRequest.username}</p>\n                <p>Phone: {currentBloodRequest.phone}</p>           \n                <p>Blood Type: {currentBloodRequest.bloodType}</p>\n                <p>Blood Count: {currentBloodRequest.bloodCount}</p>\n                <p>Reason: {currentBloodRequest.reason}</p>\n                <p>Location: {currentBloodRequest.location}</p>\n                <p>Request Date: { Date(currentBloodRequest.requestedDate) }</p>\n                <Link to={\"/chat/\"+currentBloodRequest.id}><button>Donate</button></Link>\n            </React.Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    bloodRequests : state.bloodRequests\n})\n  \nconst mapDispatchToProps = {\n    fetchBloodRequests\n}\n  \nexport default connect (mapStateToProps,mapDispatchToProps)(BloodRequestDetail)\n  "]},"metadata":{},"sourceType":"module"}