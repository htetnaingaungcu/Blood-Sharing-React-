{"ast":null,"code":"var _jsxFileName = \"/media/htet/13d0eda8-9d9f-4341-9c22-cd0d2676df10/PADC Project/PADC7-FP-BloodSharing-Web/blood-sharing/src/components/LoginForm/LoginForm.js\";\nimport React from 'react';\nimport { render } from \"react-dom\";\nimport { BrowserRouter as Router, Redirect, Route, Link } from \"react-router-dom\";\nexport default class LoginForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleOnSubmit = event => {\n      event.preventDefault();\n      this.props.loginEvent({\n        username: this.username.current.value,\n        password: this.password.current.value\n      }, () => {\n        this.setState({\n          redirectToReferrer: true\n        });\n      });\n    };\n\n    this.username = React.createRef();\n    this.password = React.createRef();\n    this.state = {\n      redirectToReferrer: false\n    };\n  }\n\n  render() {\n    let _ref = this.props.location.state || {\n      from: {\n        pathname: \"/\"\n      }\n    },\n        from = _ref.from;\n\n    let redirectToReferrer = this.state.redirectToReferrer;\n    if (redirectToReferrer) return React.createElement(Redirect, {\n      to: from,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    });\n    return React.createElement(\"form\", {\n      onSubmit: this.handleOnSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Username : \"), React.createElement(\"input\", {\n      id: \"username\",\n      required: true,\n      ref: this.username,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"input\", {\n      type: \"password\",\n      required: true,\n      id: \"password\",\n      ref: this.password,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Login\"));\n  }\n\n}","map":{"version":3,"sources":["/media/htet/13d0eda8-9d9f-4341-9c22-cd0d2676df10/PADC Project/PADC7-FP-BloodSharing-Web/blood-sharing/src/components/LoginForm/LoginForm.js"],"names":["React","render","BrowserRouter","Router","Redirect","Route","Link","LoginForm","Component","constructor","props","handleOnSubmit","event","preventDefault","loginEvent","username","current","value","password","setState","redirectToReferrer","createRef","state","location","from","pathname"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SACCC,aAAa,IAAIC,MADlB,EAECC,QAFD,EAGCC,KAHD,EAICC,IAJD,QAKS,kBALT;AAOA,eAAe,MAAMC,SAAN,SAAwBP,KAAK,CAACQ,SAA9B,CAAwC;AAEtDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;;AADkB,SAUnBC,cAVmB,GAUDC,KAAD,IAAW;AAC3BA,MAAAA,KAAK,CAACC,cAAN;AACA,WAAKH,KAAL,CAAWI,UAAX,CACC;AACCC,QAAAA,QAAQ,EAAG,KAAKA,QAAL,CAAcC,OAAd,CAAsBC,KADlC;AAECC,QAAAA,QAAQ,EAAG,KAAKA,QAAL,CAAcF,OAAd,CAAsBC;AAFlC,OADD,EAKC,MAAM;AACL,aAAKE,QAAL,CAAc;AACbC,UAAAA,kBAAkB,EAAG;AADR,SAAd;AAGA,OATF;AAWA,KAvBkB;;AAElB,SAAKL,QAAL,GAAgBf,KAAK,CAACqB,SAAN,EAAhB;AACA,SAAKH,QAAL,GAAgBlB,KAAK,CAACqB,SAAN,EAAhB;AACA,SAAKC,KAAL,GAAa;AACZF,MAAAA,kBAAkB,EAAG;AADT,KAAb;AAGA;;AAkBDnB,EAAAA,MAAM,GAAG;AAAA,eACO,KAAKS,KAAL,CAAWa,QAAX,CAAoBD,KAApB,IAA6B;AAAEE,MAAAA,IAAI,EAAE;AAAEC,QAAAA,QAAQ,EAAC;AAAX;AAAR,KADpC;AAAA,QACFD,IADE,QACFA,IADE;;AAAA,QAEFJ,kBAFE,GAEqB,KAAKE,KAF1B,CAEFF,kBAFE;AAIR,QAAGA,kBAAH,EAAuB,OAAO,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAEI,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAEvB,WACC;AAAM,MAAA,QAAQ,EAAE,KAAKb,cAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE;AAAO,MAAA,EAAE,EAAC,UAAV;AAAqB,MAAA,QAAQ,MAA7B;AAA8B,MAAA,GAAG,EAAE,KAAKI,QAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIE;AAAO,MAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,EAKE;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,QAAQ,MAA/B;AAAgC,MAAA,EAAE,EAAC,UAAnC;AAA8C,MAAA,GAAG,EAAE,KAAKG,QAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,EAOE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAPF,CADD;AAWA;;AA5CqD","sourcesContent":["import React from 'react';\nimport { render } from \"react-dom\";\nimport {\n\tBrowserRouter as Router,\n\tRedirect,\n\tRoute,\n\tLink\n  } from \"react-router-dom\";\n\nexport default class LoginForm extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.username = React.createRef();\n\t\tthis.password = React.createRef();\n\t\tthis.state = {\n\t\t\tredirectToReferrer : false\n\t\t};\n\t}\n\n\n\thandleOnSubmit = (event) => {\n\t\tevent.preventDefault();\n\t\tthis.props.loginEvent(\n\t\t\t{\n\t\t\t\tusername : this.username.current.value,\n\t\t\t\tpassword : this.password.current.value\n\t\t\t},\n\t\t\t() => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tredirectToReferrer : true\n\t\t\t\t});\n\t\t\t}\n\t\t)\n\t}\n\n\trender() {\n\t\tlet { from } = this.props.location.state || { from: { pathname:\"/\"} };\n\t\tlet { redirectToReferrer } = this.state;\n\n\t\tif(redirectToReferrer) return <Redirect to={from} />\n\n\t\treturn (\n\t\t\t<form onSubmit={this.handleOnSubmit}>\n\t\t\t  <label htmlFor=\"username\">Username : </label>\n\t\t\t  <input id=\"username\" required ref={this.username} />\n\t\t\t  <br />\n\t\t\t  <label htmlFor=\"password\">Password</label>\n\t\t\t  <input type=\"password\" required id=\"password\" ref={this.password} />\n\t\t\t  <br />\n\t\t\t  <button type=\"submit\">Login</button>\n\t\t\t</form>\n\t\t  );\n\t}\n}"]},"metadata":{},"sourceType":"module"}