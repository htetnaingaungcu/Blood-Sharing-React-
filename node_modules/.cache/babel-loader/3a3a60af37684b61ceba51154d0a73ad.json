{"ast":null,"code":"var _jsxFileName = \"/media/htet/13d0eda8-9d9f-4341-9c22-cd0d2676df10/PADC Project/PADC7-FP-BloodSharing-Web/blood-sharing/src/components/container/getAllRequestList/getAllRequestList.js\";\nimport React from \"react\";\nimport { BrowserRouter as Router, Route, Link, Redirect } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport { fetchBloodRequests } from '../../../actions/bloodRequestActions';\nimport BloodRequest from \"../BloodRequest\";\nimport { Container, Row } from \"react-bootstrap\";\n\nclass getAllRequestList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.props.fetchBloodRequests();\n    this.state = {\n      redirectToReferrer: false\n    };\n  }\n\n  render() {\n    const bloodRequests = this.props.bloodRequests;\n    console.log(bloodRequests);\n    var request_arr = [];\n\n    if (bloodRequests !== undefined) {\n      bloodRequests.map((bloodRequest, index) => {\n        request_arr.push(React.createElement(BloodRequest, {\n          key: index,\n          bloodRequest: bloodRequest,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }));\n      });\n      console.log('req', request_arr);\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, request_arr)));\n    }\n\n    return null;\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  bloodRequests: state.bloodRequests\n});\n\nconst mapDispatchToProps = {\n  fetchBloodRequests\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(getAllRequestList);","map":{"version":3,"sources":["/media/htet/13d0eda8-9d9f-4341-9c22-cd0d2676df10/PADC Project/PADC7-FP-BloodSharing-Web/blood-sharing/src/components/container/getAllRequestList/getAllRequestList.js"],"names":["React","BrowserRouter","Router","Route","Link","Redirect","connect","fetchBloodRequests","BloodRequest","Container","Row","getAllRequestList","Component","constructor","props","state","redirectToReferrer","render","bloodRequests","console","log","request_arr","undefined","map","bloodRequest","index","push","mapStateToProps","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAa,IAAKC,MAA3B,EAAmCC,KAAnC,EAA0CC,IAA1C,EAA+CC,QAA/C,QAA+D,kBAA/D;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,sCAAnC;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,SAASC,SAAT,EAAoBC,GAApB,QAA+B,iBAA/B;;AAEA,MAAMC,iBAAN,SAAgCX,KAAK,CAACY,SAAtC,CAAgD;AAC5CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKA,KAAL,CAAWP,kBAAX;AAEA,SAAKQ,KAAL,GAAa;AAClBC,MAAAA,kBAAkB,EAAG;AADH,KAAb;AAGH;;AAEDC,EAAAA,MAAM,GAAG;AACL,UAAMC,aAAa,GAAG,KAAKJ,KAAL,CAAWI,aAAjC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,aAAZ;AACA,QAAIG,WAAW,GAAG,EAAlB;;AACA,QAAGH,aAAa,KAAKI,SAArB,EAA+B;AAC3BJ,MAAAA,aAAa,CAACK,GAAd,CAAkB,CAACC,YAAD,EAAeC,KAAf,KAAyB;AACvCJ,QAAAA,WAAW,CAACK,IAAZ,CAAiB,oBAAC,YAAD;AAAc,UAAA,GAAG,EAAED,KAAnB;AAA0B,UAAA,YAAY,EAAED,YAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAjB;AACH,OAFD;AAGAL,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBC,WAAnB;AACA,aACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAW,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMA,WAAN,CAAX,CADJ,CADJ;AAMH;;AAID,WAAO,IAAP;AAEH;;AA/B2C;;AAkChD,MAAMM,eAAe,GAAGZ,KAAK,KAAK;AAC9BG,EAAAA,aAAa,EAAEH,KAAK,CAACG;AADS,CAAL,CAA7B;;AAIE,MAAMU,kBAAkB,GAAG;AACzBrB,EAAAA;AADyB,CAA3B;AAIA,eAAeD,OAAO,CAACqB,eAAD,EAAiBC,kBAAjB,CAAP,CAA4CjB,iBAA5C,CAAf","sourcesContent":["import React from \"react\";\nimport { BrowserRouter as  Router, Route, Link,Redirect } from \"react-router-dom\";\n\nimport { connect } from 'react-redux';\nimport { fetchBloodRequests } from '../../../actions/bloodRequestActions';\nimport BloodRequest from \"../BloodRequest\";\nimport { Container, Row } from \"react-bootstrap\";\n\nclass getAllRequestList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.props.fetchBloodRequests();\n\n        this.state = {\n\t\t\tredirectToReferrer : false\n\t\t};\n    }\n\n    render() {\n        const bloodRequests = this.props.bloodRequests;\n        console.log(bloodRequests);\n        var request_arr = [];\n        if(bloodRequests !== undefined){\n            bloodRequests.map((bloodRequest, index) => {  \n                request_arr.push(<BloodRequest key={index} bloodRequest={bloodRequest} />);\n            });\n            console.log('req', request_arr)\n            return (\n                <React.Fragment>\n                    <Container><Row>{request_arr}</Row></Container>\n                </React.Fragment>\n                \n            );\n        }   \n            \n            \n\n        return null;\n        \n    }\n}\n\nconst mapStateToProps = state => ({\n    bloodRequests: state.bloodRequests,\n  });\n  \n  const mapDispatchToProps = {\n    fetchBloodRequests,\n  }\n  \n  export default connect(mapStateToProps,mapDispatchToProps)(getAllRequestList);"]},"metadata":{},"sourceType":"module"}