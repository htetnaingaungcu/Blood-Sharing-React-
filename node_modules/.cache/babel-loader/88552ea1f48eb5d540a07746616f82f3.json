{"ast":null,"code":"var _jsxFileName = \"/media/htet/13d0eda8-9d9f-4341-9c22-cd0d2676df10/PADC Project/PADC7-FP-BloodSharing-Web/blood-sharing/src/components/auth/RegisterForm/RegisterForm.js\";\nimport React from \"react\";\nimport { BrowserRouter as Router, Route, Link, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { insertUser } from \"../../../actions/userActions\";\n\nclass RegisterForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.successLogin = () => {\n      this.setState({\n        login: true\n      });\n    };\n\n    this.errorLogin = error => {\n      this.setState({\n        error: error\n      });\n    };\n\n    this.handleOnSubmit = event => {\n      event.preventDefault();\n      const username = this.username.current.value;\n      const password = this.password.current.value;\n      const confirm_password = this.confirm_password.current.value;\n\n      if (password === confirm_password) {\n        this.props.insertUser(username, password);\n        this.setState({\n          login: true\n        });\n      } else {\n        alert(\"No valid password and confirm password\");\n      }\n    };\n\n    this.username = React.createRef();\n    this.password = React.createRef();\n    this.confirm_password = React.createRef();\n    this.state = {\n      login: false,\n      error: {}\n    };\n  }\n\n  render() {\n    console.log(this.state.login);\n    if (this.state.login) return React.createElement(Redirect, {\n      to: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    });\n    return React.createElement(\"form\", {\n      onSubmit: this.handleOnSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Username : \"), React.createElement(\"input\", {\n      id: \"username\",\n      ref: this.username,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Password : \"), React.createElement(\"input\", {\n      type: \"password\",\n      ref: this.password,\n      required: true,\n      id: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"confirm_password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Confirm Password : \"), React.createElement(\"input\", {\n      type: \"password\",\n      ref: this.confirm_password,\n      required: true,\n      id: \"confirm_password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Register\"));\n  }\n\n}\n\nconst mapDispatchToProps = {\n  insertUser\n};\nexport default connect(null, mapDispatchToProps)(RegisterForm);","map":{"version":3,"sources":["/media/htet/13d0eda8-9d9f-4341-9c22-cd0d2676df10/PADC Project/PADC7-FP-BloodSharing-Web/blood-sharing/src/components/auth/RegisterForm/RegisterForm.js"],"names":["React","BrowserRouter","Router","Route","Link","Redirect","connect","insertUser","RegisterForm","Component","constructor","props","successLogin","setState","login","errorLogin","error","handleOnSubmit","event","preventDefault","username","current","value","password","confirm_password","alert","createRef","state","render","console","log","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { BrowserRouter as Router, Route, Link, Redirect } from \"react-router-dom\";\n\nimport { connect } from \"react-redux\";\nimport { insertUser } from \"../../../actions/userActions\";\n\nclass RegisterForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.username = React.createRef();\n        this.password = React.createRef();\n        this.confirm_password = React.createRef();\n\n        this.state = {\n            login: false,\n            error: {}\n        };\n    }\n\n    successLogin = () => {\n        this.setState({\n            login: true\n        })\n    }\n    errorLogin = (error) => {\n        this.setState({\n            error: error\n        })\n    }\n\n    handleOnSubmit = event => {\n        event.preventDefault();\n        const username = this.username.current.value;\n        const password = this.password.current.value;\n        const confirm_password = this.confirm_password.current.value;\n\n        if (password === confirm_password) {\n\n            this.props.insertUser(\n                username, \n                password, \n                );\n\n            this.setState({\n                login: true\n            });\n        } \n        else {\n\t\t\talert(\"No valid password and confirm password\");\n\t\t} \n    };\n\n    render() {\n        console.log(this.state.login);\n        if (this.state.login) return <Redirect to=\"/login\" />;\n\n        return (\n            <form onSubmit={this.handleOnSubmit}>\n                <label htmlFor=\"username\">Username : </label>\n                <input id=\"username\" ref={this.username} required />\n                <br />\n                <label htmlFor=\"password\">Password : </label>\n                <input type=\"password\" ref={this.password} required id=\"password\" />\n                <br />\n                <label htmlFor=\"confirm_password\">Confirm Password : </label>\n                <input\n                type=\"password\"\n                ref={this.confirm_password}\n                required\n                id=\"confirm_password\"\n                />\n                <br />\n                <button type=\"submit\">Register</button>\n            </form>\n        );\n    }\n}\n\nconst mapDispatchToProps = {\n    insertUser\n}\n\nexport default connect(null, mapDispatchToProps)(RegisterForm);"]},"metadata":{},"sourceType":"module"}