{"ast":null,"code":"var _jsxFileName = \"/media/htet/13d0eda8-9d9f-4341-9c22-cd0d2676df10/PADC Project/PADC7-FP-BloodSharing-Web/blood-sharing/src/components/BloodRequestForm/BloodRequestForm.js\";\nimport React from \"react\";\nimport { BrowserRouter as Router, Route, Link, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { insertBloodRequest } from \"../../actions/bloodRequestActions\";\n\nclass BloodRequestForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.statusOnChange = event => {\n      this.setState({\n        status: event.target.value\n      });\n    };\n\n    this.handleOnSubmit = event => {\n      event.preventDefault();\n      this.props.insertBloodRequest({\n        name: this.name.current.value,\n        phone: this.phone.current.value,\n        blood_type: this.blood_type.current.value,\n        city: this.city.current.value,\n        reason: this.reason.current.value\n      }, () => {\n        this.setState({\n          completeBloodRequest: true\n        });\n      });\n    };\n\n    this.name = React.createRef();\n    this.phone = React.createRef();\n    this.blood_type = React.createRef();\n    this.city = React.createRef();\n    this.reason = React.createRef();\n    this.state = {\n      status: 'urgent',\n      completeBloodRequest: false\n    };\n  }\n\n  render() {\n    //console.log(this.state.completeBloodRequest);\n    if (this.state.completeBloodRequest) return React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    });\n    return React.createElement(\"form\", {\n      onSubmit: this.handleOnSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Name : \"), React.createElement(\"input\", {\n      id: \"name\",\n      ref: this.name,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"phone\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Phone Number : \"), React.createElement(\"input\", {\n      id: \"phone\",\n      ref: this.phone,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"blood_type\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Blood Type :\"), React.createElement(\"input\", {\n      id: \"blood_type\",\n      ref: this.blood_type,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"city\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"City : \"), React.createElement(\"input\", {\n      id: \"city\",\n      ref: this.city,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"reason\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Reason : \"), React.createElement(\"input\", {\n      id: \"reason\",\n      ref: this.reason,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"radio\",\n      value: \"urgent\",\n      checked: this.state.status === \"urgent\",\n      onChange: this.statusOnChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), \"Urgent\", React.createElement(\"input\", {\n      type: \"radio\",\n      value: \"normal\",\n      checked: this.state.status === \"normal\",\n      onChange: this.statusOnChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), \"Normal\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Submit\"));\n  }\n\n}\n\nconst mapDispatchToProps = {\n  insertBloodRequest\n};\nexport default connect(null, mapDispatchToProps)(BloodRequestForm);","map":{"version":3,"sources":["/media/htet/13d0eda8-9d9f-4341-9c22-cd0d2676df10/PADC Project/PADC7-FP-BloodSharing-Web/blood-sharing/src/components/BloodRequestForm/BloodRequestForm.js"],"names":["React","BrowserRouter","Router","Route","Link","Redirect","connect","insertBloodRequest","BloodRequestForm","Component","constructor","props","statusOnChange","event","setState","status","target","value","handleOnSubmit","preventDefault","name","current","phone","blood_type","city","reason","completeBloodRequest","createRef","state","render","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { BrowserRouter as  Router, Route, Link,Redirect } from \"react-router-dom\";\n\nimport { connect } from \"react-redux\";\nimport { insertBloodRequest } from \"../../actions/bloodRequestActions\";\n\nclass BloodRequestForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.name = React.createRef();\n        this.phone = React.createRef();\n        this.blood_type = React.createRef();\n        this.city = React.createRef();\n        this.reason = React.createRef();        \n        \n        this.state = {\n            status: 'urgent',\n            completeBloodRequest: false\n        };\n    }\n\n    statusOnChange = (event) => {\n        this.setState({\n            status: event.target.value\n        })\n    }\n\n    handleOnSubmit = event => {\n        event.preventDefault();\n        this.props.insertBloodRequest(\n            {\n                name: this.name.current.value,\n                phone: this.phone.current.value,\n                blood_type: this.blood_type.current.value,\n                city: this.city.current.value,\n                reason: this.reason.current.value,\n            },\n            () => {\n            this.setState({\n                completeBloodRequest: true\n            });\n        });    \n    };\n\n    render() {\n        //console.log(this.state.completeBloodRequest);\n        if (this.state.completeBloodRequest) return <Redirect to=\"/\" />;\n\n        return (\n            <form onSubmit={this.handleOnSubmit}>\n                <label htmlFor=\"name\">Name : </label>\n                <input id=\"name\" ref={this.name} required />\n                <br />\n                <label htmlFor=\"phone\">Phone Number : </label>\n                <input id=\"phone\" ref={this.phone} required />\n                <br />\n                <label htmlFor=\"blood_type\">Blood Type :</label>\n                <input id=\"blood_type\" ref={this.blood_type} required />\n                <br />\n                <label htmlFor=\"city\">City : </label>\n                <input id=\"city\" ref={this.city} required />\n                <br />\n                <label htmlFor=\"reason\">Reason : </label>\n                <input id=\"reason\" ref={this.reason} required />\n                <br />\n                <input type=\"radio\" value=\"urgent\" checked={this.state.status === \"urgent\"}\n                    onChange={this.statusOnChange} />\n                Urgent\n                <input type=\"radio\" value=\"normal\" checked={this.state.status === \"normal\"}\n                    onChange={this.statusOnChange} />\n                Normal\n                <br /> \n                \n                <button type=\"submit\">Submit</button>\n            </form>\n        );\n    }\n}\n\nconst mapDispatchToProps = {\n    insertBloodRequest\n}\n\nexport default connect(null, mapDispatchToProps)(BloodRequestForm);"]},"metadata":{},"sourceType":"module"}