{"ast":null,"code":"import { retrieveData, storeData } from \"../utilites/localStorage\";\nimport firebase from '../utilites/firebase';\nexport const insertDonor = donor => dispatch => {\n  console.log(donor);\n  firebase.firestore().collection('Donor').add(donor).then(data => {\n    dispatch({\n      type: 'ADD_NEW_DONOR',\n      data: donor\n    });\n  }); // firebase.firestore().collection('User').doc(user.id).get().then( (data) =>{\n  //     console.log(data.data())\n  // })\n  // firebase.firestore().collection('User').doc(user.id)\n  // .update(user)\n  // .then( (data) => {\n  //     dispatch({\n  //         type: 'UPDATE_USER',\n  //         user: user\n  //     })\n  // })\n};\nexport const fetchDonors = () => dispatch => {\n  const donors = [];\n  const getDonors = firebase.firestore().collection('Donor').get();\n  getDonors.then(snapshot => {\n    snapshot.docs.forEach(item => {\n      const donor = item.data();\n      donor.id = item.id;\n      donors.push(donor);\n    });\n    console.log(\"donors\", donors);\n    dispatch({\n      type: 'FETCH_DONOR',\n      data: donors\n    });\n  });\n};","map":{"version":3,"sources":["/media/htet/13d0eda8-9d9f-4341-9c22-cd0d2676df10/PADC Project/PADC7-FP-BloodSharing-Web/blood-sharing/src/actions/donorActions.js"],"names":["retrieveData","storeData","firebase","insertDonor","donor","dispatch","console","log","firestore","collection","add","then","data","type","fetchDonors","donors","getDonors","get","snapshot","docs","forEach","item","id","push"],"mappings":"AAAA,SAAQA,YAAR,EAAqBC,SAArB,QAAqC,0BAArC;AACA,OAAOC,QAAP,MAAqB,sBAArB;AAEA,OAAO,MAAMC,WAAW,GAAIC,KAAD,IAAWC,QAAQ,IAAI;AAE9CC,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AAEAF,EAAAA,QAAQ,CAACM,SAAT,GAAqBC,UAArB,CAAgC,OAAhC,EAAyCC,GAAzC,CAA6CN,KAA7C,EACCO,IADD,CACQC,IAAD,IAAU;AACbP,IAAAA,QAAQ,CAAC;AACLQ,MAAAA,IAAI,EAAE,eADD;AAELD,MAAAA,IAAI,EAAGR;AAFF,KAAD,CAAR;AAIH,GAND,EAJ8C,CAY9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,CAvBI;AAyBP,OAAO,MAAMU,WAAW,GAAG,MAAMT,QAAQ,IAAI;AACzC,QAAMU,MAAM,GAAG,EAAf;AACA,QAAMC,SAAS,GAAGd,QAAQ,CAACM,SAAT,GAAqBC,UAArB,CAAgC,OAAhC,EAAyCQ,GAAzC,EAAlB;AAEAD,EAAAA,SAAS,CAACL,IAAV,CAAiBO,QAAD,IAAc;AAC1BA,IAAAA,QAAQ,CAACC,IAAT,CAAcC,OAAd,CAAuBC,IAAI,IAAI;AAC3B,YAAMjB,KAAK,GAAGiB,IAAI,CAACT,IAAL,EAAd;AACAR,MAAAA,KAAK,CAACkB,EAAN,GAAWD,IAAI,CAACC,EAAhB;AACAP,MAAAA,MAAM,CAACQ,IAAP,CAAYnB,KAAZ;AACH,KAJD;AAMAE,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBQ,MAArB;AACAV,IAAAA,QAAQ,CAAC;AACLQ,MAAAA,IAAI,EAAE,aADD;AAELD,MAAAA,IAAI,EAAEG;AAFD,KAAD,CAAR;AAIH,GAZD;AAaH,CAjBM","sourcesContent":["import {retrieveData,storeData} from \"../utilites/localStorage\";\nimport firebase from '../utilites/firebase';\n\nexport const insertDonor = (donor) => dispatch => {\n\n    console.log(donor);\n\n    firebase.firestore().collection('Donor').add(donor)\n    .then( (data) => {\n        dispatch({\n            type: 'ADD_NEW_DONOR',\n            data : donor\n        });\n    });\n\n    // firebase.firestore().collection('User').doc(user.id).get().then( (data) =>{\n    //     console.log(data.data())\n    // })\n    // firebase.firestore().collection('User').doc(user.id)\n    // .update(user)\n    // .then( (data) => {\n    //     dispatch({\n    //         type: 'UPDATE_USER',\n    //         user: user\n    //     })\n    // })\n  };\n\nexport const fetchDonors = () => dispatch => {\n    const donors = [];\n    const getDonors = firebase.firestore().collection('Donor').get();\n\n    getDonors.then( (snapshot) => {\n        snapshot.docs.forEach( item => {\n            const donor = item.data();\n            donor.id = item.id;\n            donors.push(donor);\n        });\n\n        console.log(\"donors\",donors)\n        dispatch({\n            type: 'FETCH_DONOR',\n            data: donors\n        });\n    })\n}\n\n"]},"metadata":{},"sourceType":"module"}