{"ast":null,"code":"import { retrieveData, storeData } from \"../utilites/localStorage\";\nimport firebase from '../utilites/firebase';\nexport const fetchBloodRequests = () => dispatch => {\n  const bloodRequests = [];\n  const getRequests = firebase.firestore().collection('Request_User').get();\n  getRequests.then(snapshot => {\n    snapshot.docs.forEach(item => {\n      const request = item.data();\n      request.id = item.id;\n      bloodRequests.push(request);\n    });\n    dispatch({\n      type: 'FETCH_REQUEST',\n      data: bloodRequests\n    });\n  });\n};\nexport const fetchRequestByBloodType = bloodType => dispatch => {\n  const bloodRequests = [];\n  firebase.firestore().collection('Request_User').where('bloodType', '==', bloodType).get().then(snapshot => {\n    snapshot.docs.forEach(item => {\n      const request = item.data();\n      request.id = item.id;\n      bloodRequests.push(request);\n    });\n    dispatch({\n      type: 'FETCH_ALL_REQUEST',\n      data: bloodRequests\n    });\n  });\n};\nexport const insertBloodRequest = bloodRequest => dispatch => {\n  firebase.firestore().collection('Request_User').add(bloodRequest).then(data => {\n    bloodRequest.id = data.id;\n    dispatch({\n      type: 'ADD_NEW_BLOOD_REQUEST',\n      data: bloodRequest\n    });\n  });\n};","map":{"version":3,"sources":["/media/htet/13d0eda8-9d9f-4341-9c22-cd0d2676df10/PADC Project/PADC7-FP-BloodSharing-Web/blood-sharing/src/actions/bloodRequestActions.js"],"names":["retrieveData","storeData","firebase","fetchBloodRequests","dispatch","bloodRequests","getRequests","firestore","collection","get","then","snapshot","docs","forEach","item","request","data","id","push","type","fetchRequestByBloodType","bloodType","where","insertBloodRequest","bloodRequest","add"],"mappings":"AAAA,SAAQA,YAAR,EAAqBC,SAArB,QAAqC,0BAArC;AACA,OAAOC,QAAP,MAAqB,sBAArB;AAEA,OAAO,MAAMC,kBAAkB,GAAG,MAAMC,QAAQ,IAAI;AAClD,QAAMC,aAAa,GAAG,EAAtB;AACA,QAAMC,WAAW,GAAGJ,QAAQ,CAACK,SAAT,GAAqBC,UAArB,CAAgC,cAAhC,EAAgDC,GAAhD,EAApB;AAEAH,EAAAA,WAAW,CAACI,IAAZ,CAAmBC,QAAD,IAAc;AAC9BA,IAAAA,QAAQ,CAACC,IAAT,CAAcC,OAAd,CAAuBC,IAAI,IAAI;AAC3B,YAAMC,OAAO,GAAGD,IAAI,CAACE,IAAL,EAAhB;AACAD,MAAAA,OAAO,CAACE,EAAR,GAAaH,IAAI,CAACG,EAAlB;AACAZ,MAAAA,aAAa,CAACa,IAAd,CAAmBH,OAAnB;AACH,KAJD;AAKAX,IAAAA,QAAQ,CAAC;AACLe,MAAAA,IAAI,EAAE,eADD;AAELH,MAAAA,IAAI,EAAEX;AAFD,KAAD,CAAR;AAID,GAVD;AAWD,CAfM;AAiBP,OAAO,MAAMe,uBAAuB,GAAIC,SAAD,IAAejB,QAAQ,IAAI;AAChE,QAAMC,aAAa,GAAG,EAAtB;AACAH,EAAAA,QAAQ,CAACK,SAAT,GAAqBC,UAArB,CAAgC,cAAhC,EAAgDc,KAAhD,CAAsD,WAAtD,EAAmE,IAAnE,EAAyED,SAAzE,EAAoFZ,GAApF,GACCC,IADD,CACMC,QAAQ,IAAI;AAChBA,IAAAA,QAAQ,CAACC,IAAT,CAAcC,OAAd,CAAuBC,IAAI,IAAI;AAC7B,YAAMC,OAAO,GAAGD,IAAI,CAACE,IAAL,EAAhB;AACAD,MAAAA,OAAO,CAACE,EAAR,GAAaH,IAAI,CAACG,EAAlB;AACAZ,MAAAA,aAAa,CAACa,IAAd,CAAmBH,OAAnB;AACD,KAJD;AAMAX,IAAAA,QAAQ,CAAC;AACPe,MAAAA,IAAI,EAAE,mBADC;AAEPH,MAAAA,IAAI,EAAEX;AAFC,KAAD,CAAR;AAKD,GAbD;AAcD,CAhBM;AAkBP,OAAO,MAAMkB,kBAAkB,GAAIC,YAAD,IAAkBpB,QAAQ,IAAI;AAE5DF,EAAAA,QAAQ,CAACK,SAAT,GAAqBC,UAArB,CAAgC,cAAhC,EAAgDiB,GAAhD,CAAoDD,YAApD,EACCd,IADD,CACQM,IAAD,IAAU;AACfQ,IAAAA,YAAY,CAACP,EAAb,GAAkBD,IAAI,CAACC,EAAvB;AACAb,IAAAA,QAAQ,CAAC;AACPe,MAAAA,IAAI,EAAE,uBADC;AAEPH,MAAAA,IAAI,EAAGQ;AAFA,KAAD,CAAR;AAID,GAPD;AASD,CAXI","sourcesContent":["import {retrieveData,storeData} from \"../utilites/localStorage\";\nimport firebase from '../utilites/firebase';\n\nexport const fetchBloodRequests = () => dispatch => {\n  const bloodRequests = [];\n  const getRequests = firebase.firestore().collection('Request_User').get();\n\n  getRequests.then( (snapshot) => {\n    snapshot.docs.forEach( item => {\n        const request = item.data();\n        request.id = item.id;\n        bloodRequests.push(request);\n    });\n    dispatch({\n        type: 'FETCH_REQUEST',\n        data: bloodRequests\n    });\n  }) \n}\n\nexport const fetchRequestByBloodType = (bloodType) => dispatch => {\n  const bloodRequests = [];\n  firebase.firestore().collection('Request_User').where('bloodType', '==', bloodType).get()\n  .then(snapshot => {\n    snapshot.docs.forEach( item => {\n      const request = item.data();\n      request.id = item.id;\n      bloodRequests.push(request);\n    });\n\n    dispatch({\n      type: 'FETCH_ALL_REQUEST',\n      data: bloodRequests\n    });\n\n  });\n}\n\nexport const insertBloodRequest = (bloodRequest) => dispatch => { \n      \n    firebase.firestore().collection('Request_User').add(bloodRequest)\n    .then( (data) => {\n      bloodRequest.id = data.id;\n      dispatch({\n        type: 'ADD_NEW_BLOOD_REQUEST',\n        data : bloodRequest\n      });\n    });\n\n  };\n"]},"metadata":{},"sourceType":"module"}