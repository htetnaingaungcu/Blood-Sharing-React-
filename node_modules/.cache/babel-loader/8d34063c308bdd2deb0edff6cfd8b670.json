{"ast":null,"code":"var _jsxFileName = \"/media/htet/13d0eda8-9d9f-4341-9c22-cd0d2676df10/PADC Project/PADC7-FP-BloodSharing-Web/blood-sharing/src/components/container/ImageUpload/ImageUpload.js\";\nimport React from 'react';\nimport './ImageUpload.css';\nimport firebase from '../../../utilites/firebase';\nimport { connect } from 'react-redux';\nconst firestore = firebase.firestore();\n\nclass ImageUpload extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.addMessage = url => {\n      const message = {\n        image: url,\n        sendAt: new Date(),\n        uid: this.props.currentUser.uid\n      };\n      const message_id = this.props.messageId;\n      firestore.collection('Chat_Room').doc(message_id).collection('Message').add(message);\n    };\n\n    this.handleFileOnChange = () => {\n      const file = this.imageFile.current.files[0];\n      var storageRef = firebase.storage().ref();\n      const filePath = 'message/images/' + file.name;\n      const imageRef = storageRef.child(filePath);\n      imageRef.put(file).then(() => {\n        storageRef.child(filePath).getDownloadURL().then(this.addMessage);\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.imageFile = React.createRef();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"uploadHolder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      ref: this.imageFile,\n      onChange: this.handleFileOnChange,\n      type: \"file\",\n      accept: \"image/*\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  currentUser: state.currentUser\n});\n\nexport default connect(mapStateToProps)(ImageUpload);","map":{"version":3,"sources":["/media/htet/13d0eda8-9d9f-4341-9c22-cd0d2676df10/PADC Project/PADC7-FP-BloodSharing-Web/blood-sharing/src/components/container/ImageUpload/ImageUpload.js"],"names":["React","firebase","connect","firestore","ImageUpload","Component","constructor","props","addMessage","url","message","image","sendAt","Date","uid","currentUser","message_id","messageId","collection","doc","add","handleFileOnChange","file","imageFile","current","files","storageRef","storage","ref","filePath","name","imageRef","child","put","then","getDownloadURL","catch","error","console","log","createRef","render","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,mBAAP;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,MAAMC,SAAS,GAAGF,QAAQ,CAACE,SAAT,EAAlB;;AACA,MAAMC,WAAN,SAA0BJ,KAAK,CAACK,SAAhC,CAA0C;AACxCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAKnBC,UALmB,GAKLC,GAAD,IAAS;AACpB,YAAMC,OAAO,GAAG;AACZC,QAAAA,KAAK,EAAEF,GADK;AAEZG,QAAAA,MAAM,EAAE,IAAIC,IAAJ,EAFI;AAGZC,QAAAA,GAAG,EAAE,KAAKP,KAAL,CAAWQ,WAAX,CAAuBD;AAHhB,OAAhB;AAKA,YAAME,UAAU,GAAG,KAAKT,KAAL,CAAWU,SAA9B;AAEAd,MAAAA,SAAS,CAACe,UAAV,CAAqB,WAArB,EAAkCC,GAAlC,CAAsCH,UAAtC,EAAkDE,UAAlD,CAA6D,SAA7D,EAAwEE,GAAxE,CAA4EV,OAA5E;AACD,KAdkB;;AAAA,SAgBnBW,kBAhBmB,GAgBE,MAAM;AACzB,YAAMC,IAAI,GAAG,KAAKC,SAAL,CAAeC,OAAf,CAAuBC,KAAvB,CAA6B,CAA7B,CAAb;AACA,UAAIC,UAAU,GAAGzB,QAAQ,CAAC0B,OAAT,GAAmBC,GAAnB,EAAjB;AAEA,YAAMC,QAAQ,GAAG,oBAAoBP,IAAI,CAACQ,IAA1C;AACA,YAAMC,QAAQ,GAAGL,UAAU,CAACM,KAAX,CAAiBH,QAAjB,CAAjB;AAEAE,MAAAA,QAAQ,CACLE,GADH,CACOX,IADP,EAEGY,IAFH,CAEQ,MAAM;AACVR,QAAAA,UAAU,CAACM,KAAX,CAAiBH,QAAjB,EACGM,cADH,GACoBD,IADpB,CACyB,KAAK1B,UAD9B;AAGD,OANH,EAOG4B,KAPH,CAOSC,KAAK,IAAI;AAAEC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAAoB,OAPxC;AASD,KAhCkB;;AAEjB,SAAKd,SAAL,GAAiBvB,KAAK,CAACwC,SAAN,EAAjB;AACD;;AA+BDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,GAAG,EAAE,KAAKlB,SADZ;AAEE,MAAA,QAAQ,EAAE,KAAKF,kBAFjB;AAGE,MAAA,IAAI,EAAC,MAHP;AAGc,MAAA,MAAM,EAAC,SAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAQD;;AA5CuC;;AAgD1C,MAAMqB,eAAe,GAAIC,KAAD,KAAY;AAClC5B,EAAAA,WAAW,EAAE4B,KAAK,CAAC5B;AADe,CAAZ,CAAxB;;AAIA,eAAeb,OAAO,CAACwC,eAAD,CAAP,CAAyBtC,WAAzB,CAAf","sourcesContent":["import React from 'react';\nimport './ImageUpload.css';\nimport firebase from '../../../utilites/firebase';\nimport { connect } from 'react-redux';\n\nconst firestore = firebase.firestore();\nclass ImageUpload extends React.Component {\n  constructor(props) {\n    super(props);\n    this.imageFile = React.createRef();\n  }\n\n  addMessage = (url) => {\n    const message = {\n        image: url,\n        sendAt: new Date(),\n        uid: this.props.currentUser.uid\n    }\n    const message_id = this.props.messageId;\n    \n    firestore.collection('Chat_Room').doc(message_id).collection('Message').add(message)\n  }\n\n  handleFileOnChange = () => {\n    const file = this.imageFile.current.files[0];\n    var storageRef = firebase.storage().ref();\n\n    const filePath = 'message/images/' + file.name;\n    const imageRef = storageRef.child(filePath);\n\n    imageRef\n      .put(file)\n      .then(() => {\n        storageRef.child(filePath)\n          .getDownloadURL().then(this.addMessage)\n\n      })\n      .catch(error => { console.log(error) });\n\n  }\n\n  render() {\n    return (\n      <div className=\"uploadHolder\">\n        <input\n          ref={this.imageFile}\n          onChange={this.handleFileOnChange}\n          type=\"file\" accept=\"image/*\" />\n      </div>\n    );\n  }\n}\n\n\nconst mapStateToProps = (state) => ({\n  currentUser: state.currentUser,\n})\n\nexport default connect(mapStateToProps)(ImageUpload);"]},"metadata":{},"sourceType":"module"}