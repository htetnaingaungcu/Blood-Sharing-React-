{"ast":null,"code":"var _jsxFileName = \"/media/htet/13d0eda8-9d9f-4341-9c22-cd0d2676df10/PADC Project/PADC7-FP-BloodSharing-Web/blood-sharing/src/components/container/BloodRequestList/BloodRequestList.js\";\nimport React from \"react\";\nimport { BrowserRouter as Router, Route, Link, Redirect } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport { fetchRequestByBloodType } from '../../../actions/bloodRequestActions';\nimport { fetchDonors } from '../../../actions/donorActions';\nimport { fetchUsers } from '../../../actions/userActions';\nimport BloodRequest from \"../../presentional/BloodRequest/BloodRequest\";\n\nclass BloodRequestList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.props.fetchDonors();\n    this.props.fetchUsers();\n    const uid = this.props.currentUser.uid;\n    const donorList = this.props.donors;\n    console.log(uid);\n    console.log(\"Donor List\", donorList);\n    const donor = donorList.find(item => item.uid === uid);\n    console.log(\"donor\", donor);\n\n    if (donor) {\n      const users = this.props.users;\n      const user = users.find(item => item.id === uid);\n      const bloodType = user.bloodType;\n      this.props.fetchRequestByBloodType(bloodType);\n    }\n\n    this.state = {\n      redirectToReferrer: false\n    };\n  }\n\n  render() {\n    const bloodRequests = this.props.bloodRequests;\n    console.log(bloodRequests);\n\n    if (bloodRequests !== undefined) {\n      return bloodRequests.map((bloodRequest, index) => {\n        return React.createElement(BloodRequest, {\n          key: index,\n          bloodRequest: bloodRequest,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        });\n      });\n    }\n\n    return \"display knowledge for request user\";\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  bloodRequests: state.bloodRequests,\n  currentUser: state.currentUser,\n  donors: state.donors,\n  users: state.users\n});\n\nconst mapDispatchToProps = {\n  fetchRequestByBloodType,\n  fetchDonors,\n  fetchUsers\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(BloodRequestList);","map":{"version":3,"sources":["/media/htet/13d0eda8-9d9f-4341-9c22-cd0d2676df10/PADC Project/PADC7-FP-BloodSharing-Web/blood-sharing/src/components/container/BloodRequestList/BloodRequestList.js"],"names":["React","BrowserRouter","Router","Route","Link","Redirect","connect","fetchRequestByBloodType","fetchDonors","fetchUsers","BloodRequest","BloodRequestList","Component","constructor","props","uid","currentUser","donorList","donors","console","log","donor","find","item","users","user","id","bloodType","state","redirectToReferrer","render","bloodRequests","undefined","map","bloodRequest","index","mapStateToProps","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAa,IAAKC,MAA3B,EAAmCC,KAAnC,EAA0CC,IAA1C,EAA+CC,QAA/C,QAA+D,kBAA/D;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,uBAAT,QAAwC,sCAAxC;AACA,SAASC,WAAT,QAA4B,+BAA5B;AACA,SAASC,UAAT,QAA2B,8BAA3B;AACA,OAAOC,YAAP,MAAyB,8CAAzB;;AAEA,MAAMC,gBAAN,SAA+BX,KAAK,CAACY,SAArC,CAA+C;AAC3CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKA,KAAL,CAAWN,WAAX;AACA,SAAKM,KAAL,CAAWL,UAAX;AAEA,UAAMM,GAAG,GAAG,KAAKD,KAAL,CAAWE,WAAX,CAAuBD,GAAnC;AACA,UAAME,SAAS,GAAG,KAAKH,KAAL,CAAWI,MAA7B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,GAAZ;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyBH,SAAzB;AAEA,UAAMI,KAAK,GAAGJ,SAAS,CAACK,IAAV,CAAgBC,IAAI,IAAIA,IAAI,CAACR,GAAL,KAAaA,GAArC,CAAd;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBC,KAArB;;AACA,QAAGA,KAAH,EAAS;AACL,YAAMG,KAAK,GAAG,KAAKV,KAAL,CAAWU,KAAzB;AACA,YAAMC,IAAI,GAAGD,KAAK,CAACF,IAAN,CAAYC,IAAI,IAAIA,IAAI,CAACG,EAAL,KAAYX,GAAhC,CAAb;AACA,YAAMY,SAAS,GAAGF,IAAI,CAACE,SAAvB;AACA,WAAKb,KAAL,CAAWP,uBAAX,CAAmCoB,SAAnC;AACH;;AAED,SAAKC,KAAL,GAAa;AACbC,MAAAA,kBAAkB,EAAG;AADR,KAAb;AAGH;;AAEDC,EAAAA,MAAM,GAAG;AACL,UAAMC,aAAa,GAAG,KAAKjB,KAAL,CAAWiB,aAAjC;AACAZ,IAAAA,OAAO,CAACC,GAAR,CAAYW,aAAZ;;AACA,QAAGA,aAAa,KAAKC,SAArB,EAA+B;AAC3B,aAAOD,aAAa,CAACE,GAAd,CAAkB,CAACC,YAAD,EAAeC,KAAf,KAAyB;AAC9C,eAAO,oBAAC,YAAD;AAAc,UAAA,GAAG,EAAEA,KAAnB;AAA0B,UAAA,YAAY,EAAED,YAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,OAFM,CAAP;AAGH;;AAED,WAAO,oCAAP;AAEH;;AApC0C;;AAuC/C,MAAME,eAAe,GAAGR,KAAK,KAAK;AAC9BG,EAAAA,aAAa,EAAEH,KAAK,CAACG,aADS;AAE9Bf,EAAAA,WAAW,EAAGY,KAAK,CAACZ,WAFU;AAG9BE,EAAAA,MAAM,EAAGU,KAAK,CAACV,MAHe;AAI9BM,EAAAA,KAAK,EAAGI,KAAK,CAACJ;AAJgB,CAAL,CAA7B;;AAOE,MAAMa,kBAAkB,GAAG;AACzB9B,EAAAA,uBADyB;AAEzBC,EAAAA,WAFyB;AAGzBC,EAAAA;AAHyB,CAA3B;AAMA,eAAeH,OAAO,CAAC8B,eAAD,EAAiBC,kBAAjB,CAAP,CAA4C1B,gBAA5C,CAAf","sourcesContent":["import React from \"react\";\nimport { BrowserRouter as  Router, Route, Link,Redirect } from \"react-router-dom\";\n\nimport { connect } from 'react-redux';\nimport { fetchRequestByBloodType } from '../../../actions/bloodRequestActions';\nimport { fetchDonors } from '../../../actions/donorActions';\nimport { fetchUsers } from '../../../actions/userActions';\nimport BloodRequest from \"../../presentional/BloodRequest/BloodRequest\";\n\nclass BloodRequestList extends React.Component {\n    constructor(props) {\n        super(props);  \n        this.props.fetchDonors();\n        this.props.fetchUsers();\n\n        const uid = this.props.currentUser.uid;\n        const donorList = this.props.donors;\n        console.log(uid)\n        console.log(\"Donor List\",donorList)\n        \n        const donor = donorList.find( item => item.uid === uid);\n        console.log(\"donor\", donor)\n        if(donor){\n            const users = this.props.users;\n            const user = users.find( item => item.id === uid);\n            const bloodType = user.bloodType;   \n            this.props.fetchRequestByBloodType(bloodType);\n        }      \n              \n        this.state = {\n        redirectToReferrer : false\n      };\n    }\n\n    render() {\n        const bloodRequests = this.props.bloodRequests;\n        console.log(bloodRequests)\n        if(bloodRequests !== undefined){\n            return bloodRequests.map((bloodRequest, index) => {  \n                return <BloodRequest key={index} bloodRequest={bloodRequest} />;\n            });\n        }\n       \n        return \"display knowledge for request user\";\n        \n    }\n}\n\nconst mapStateToProps = state => ({\n    bloodRequests: state.bloodRequests,\n    currentUser : state.currentUser,\n    donors : state.donors,\n    users : state.users\n  });\n  \n  const mapDispatchToProps = {\n    fetchRequestByBloodType,\n    fetchDonors,\n    fetchUsers\n  }\n  \n  export default connect(mapStateToProps,mapDispatchToProps)(BloodRequestList);"]},"metadata":{},"sourceType":"module"}